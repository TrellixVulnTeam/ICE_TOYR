{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/Quote.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport TypeService from './1TypeService/1TypeService';\nimport SubType from './2SubType/2SubType';\nimport Location from './3Location/3Location';\nimport Step4 from './Step4/Step4';\nimport Step5 from './Step5/Step5';\nimport Step6 from './Step6/Step6';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quote(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let pathname = document.URL.search('/quote');\n    dispatch({\n      type: 'CHECK_FOR_QUOTE',\n      payload: pathname\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.history.push(`${props.match.path}/step1`),\n      children: \"Start Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/type-of-service`,\n      component: TypeService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/sub-service`,\n      component: SubType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/location`,\n      component: Location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step4`,\n      component: Step4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step5`,\n      component: Step5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step6`,\n      component: Step6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quote, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Quote;\nexport default connect()(withRouter(Quote));\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/Quote.js"],"names":["connect","useDispatch","withRouter","Route","useEffect","TypeService","SubType","Location","Step4","Step5","Step6","Quote","props","dispatch","pathname","document","URL","search","type","payload","history","push","match","path"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAEpB,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACAG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,QAAQ,GAAGC,QAAQ,CAACC,GAAT,CAAaC,MAAb,CAAoB,QAApB,CAAf;AACAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEL;AAFF,KAAD,CAAR;AAID,GANQ,EAMN,CAACD,QAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMD,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAoB,GAAET,KAAK,CAACU,KAAN,CAAYC,IAAK,QAAvC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,KAAN,CAAYC,IAAK,kBAAvC;AAA0D,MAAA,SAAS,EAAElB;AAArE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACU,KAAN,CAAYC,IAAK,cAAvC;AAAsD,MAAA,SAAS,EAAEjB;AAAjE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACU,KAAN,CAAYC,IAAK,WAAvC;AAAmD,MAAA,SAAS,EAAEhB;AAA9D;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEK,KAAK,CAACU,KAAN,CAAYC,IAAK,QAAvC;AAAgD,MAAA,SAAS,EAAEf;AAA3D;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEI,KAAK,CAACU,KAAN,CAAYC,IAAK,QAAvC;AAAgD,MAAA,SAAS,EAAEd;AAA3D;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACU,KAAN,CAAYC,IAAK,QAAvC;AAAgD,MAAA,SAAS,EAAEb;AAA3D;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzBQC,K;UAEUV,W;;;KAFVU,K;AA2BT,eAAeX,OAAO,GAAGE,UAAU,CAACS,KAAD,CAAb,CAAtB","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport TypeService from './1TypeService/1TypeService';\nimport SubType from './2SubType/2SubType';\nimport Location from './3Location/3Location';\nimport Step4 from './Step4/Step4';\nimport Step5 from './Step5/Step5';\nimport Step6 from './Step6/Step6';\n\nfunction Quote(props) {\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let pathname = document.URL.search('/quote');\n    dispatch({\n      type: 'CHECK_FOR_QUOTE',\n      payload: pathname\n    });\n  }, [dispatch]);\n\n  return (\n    <div className='quote'>\n      <button onClick={() => props.history.push(`${props.match.path}/step1`)}>Start Quote</button>\n\n      <Route exact path={`${props.match.path}/type-of-service`} component={TypeService} />\n      <Route exact path={`${props.match.path}/sub-service`} component={SubType} />\n      <Route exact path={`${props.match.path}/location`} component={Location} />\n      <Route exact path={`${props.match.path}/step4`} component={Step4} />\n      <Route exact path={`${props.match.path}/step5`} component={Step5} />\n      <Route exact path={`${props.match.path}/step6`} component={Step6} />\n\n    </div>\n\n  );\n}\n\nexport default connect()(withRouter(Quote));"]},"metadata":{},"sourceType":"module"}
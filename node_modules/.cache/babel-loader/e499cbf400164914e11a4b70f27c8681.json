{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jman/Developer/ice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchKeySaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(keySaga);import{put,takeLatest}from\"redux-saga/effects\";import axios from\"axios\";function fetchKeySaga(){var response;return _regeneratorRuntime.wrap(function fetchKeySaga$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('in fetchKeySaga: step 2');_context.next=3;return axios({method:'GET',url:'/api/key'});case 3:response=_context.sent;_context.next=6;return put({type:\"SET_KEY\",payload:response.data});case 6:console.log('in put of fetchKeySaga, step 3');case 7:case\"end\":return _context.stop();}}},_marked);}function keySaga(){return _regeneratorRuntime.wrap(function keySaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest('GET_KEY',fetchKeySaga);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default keySaga;","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/redux/sagas/key.saga.js"],"names":["fetchKeySaga","keySaga","put","takeLatest","axios","console","log","method","url","response","type","payload","data"],"mappings":"yLAGUA,Y,iDAaAC,O,EAhBV,OAASC,GAAT,CAAcC,UAAd,KAAgC,oBAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,QAAUJ,CAAAA,YAAV,qIACEK,OAAO,CAACC,GAAR,CAAY,yBAAZ,EADF,gBAEiB,MAAMF,CAAAA,KAAK,CAAC,CACzBG,MAAM,CAAE,KADiB,CAEzBC,GAAG,CAAE,UAFoB,CAAD,CAAX,CAFjB,OAEMC,QAFN,+BAME,MAAMP,CAAAA,GAAG,CAAC,CACRQ,IAAI,CAAE,SADE,CAERC,OAAO,CAAEF,QAAQ,CAACG,IAFV,CAAD,CAAT,CANF,OAUEP,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAVF,sDAaA,QAAUL,CAAAA,OAAV,uIACE,MAAME,CAAAA,UAAU,CAAC,SAAD,CAAYH,YAAZ,CAAhB,CADF,wDAIA,cAAeC,CAAAA,OAAf","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction* fetchKeySaga() {\n  console.log('in fetchKeySaga: step 2');\n  let response = yield axios({\n    method: 'GET',\n    url: '/api/key',\n  });\n  yield put({\n    type: \"SET_KEY\",\n    payload: response.data,\n  });\n  console.log('in put of fetchKeySaga, step 3');\n}\n\nfunction* keySaga() {\n  yield takeLatest('GET_KEY', fetchKeySaga);\n}\n\nexport default keySaga;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jman/Developer/ice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchGeocodeSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(geocodeSaga);import{put,takeLatest}from\"redux-saga/effects\";import axios from\"axios\";function fetchGeocodeSaga(action){var response;return _regeneratorRuntime.wrap(function fetchGeocodeSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('in fetchGeocodeSaga: step 2',action.payload);_context.next=3;return axios({method:'GET',url:'/api/geocode',params:action.payload});case 3:response=_context.sent;_context.next=6;return put({type:\"SET_GEOCODE\",payload:response.data});case 6:console.log('in put of fetchGeocodeSaga, step 3');case 7:case\"end\":return _context.stop();}}},_marked);}function geocodeSaga(){return _regeneratorRuntime.wrap(function geocodeSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest('GET_GEOCODE',fetchGeocodeSaga);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default geocodeSaga;","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/redux/sagas/geocode.saga.js"],"names":["fetchGeocodeSaga","geocodeSaga","put","takeLatest","axios","action","console","log","payload","method","url","params","response","type","data"],"mappings":"yLAGUA,gB,iDAcAC,W,EAjBV,OAASC,GAAT,CAAcC,UAAd,KAAgC,oBAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,QAAUJ,CAAAA,gBAAV,CAA2BK,MAA3B,wIACEC,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAA2CF,MAAM,CAACG,OAAlD,EADF,gBAEiB,MAAMJ,CAAAA,KAAK,CAAC,CACzBK,MAAM,CAAE,KADiB,CAEzBC,GAAG,CAAE,cAFoB,CAGzBC,MAAM,CAAEN,MAAM,CAACG,OAHU,CAAD,CAAX,CAFjB,OAEMI,QAFN,+BAOE,MAAMV,CAAAA,GAAG,CAAC,CACRW,IAAI,CAAE,aADE,CAERL,OAAO,CAAEI,QAAQ,CAACE,IAFV,CAAD,CAAT,CAPF,OAWER,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAXF,sDAcA,QAAUN,CAAAA,WAAV,2IACE,MAAME,CAAAA,UAAU,CAAC,aAAD,CAAgBH,gBAAhB,CAAhB,CADF,wDAIA,cAAeC,CAAAA,WAAf","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction* fetchGeocodeSaga(action) {\n  console.log('in fetchGeocodeSaga: step 2', action.payload);\n  let response = yield axios({\n    method: 'GET',\n    url: '/api/geocode',\n    params: action.payload\n  });\n  yield put({\n    type: \"SET_GEOCODE\",\n    payload: response.data,\n  });\n  console.log('in put of fetchGeocodeSaga, step 3');\n}\n\nfunction* geocodeSaga() {\n  yield takeLatest('GET_GEOCODE', fetchGeocodeSaga);\n}\n\nexport default geocodeSaga;"]},"metadata":{},"sourceType":"module"}
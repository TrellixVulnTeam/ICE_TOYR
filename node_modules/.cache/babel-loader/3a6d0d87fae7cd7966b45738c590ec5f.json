{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/6Email/6Email.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Email(props) {\n  _s();\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 8,\n            step_number: 7\n          }\n        });\n        props.history.push('./back-to-black');\n        break;\n\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 8,\n            step_number: 5\n          }\n        });\n        props.history.push('./sidewalk');\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What is your name and email?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We are happy you are interested in a getting a quote!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"So that we know who to call you and so that we can send you the details of your quote what is your email address?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          sendInfo(values, 'forward');\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendInfo('', 'back'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nameEmail_i673\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 58\n          }, this), \"Back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary_btn\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Go to type of service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Email, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Email;\nexport default connect()(withRouter(Email));\n\nvar _c;\n\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/6Email/6Email.js"],"names":["connect","useDispatch","withRouter","Formik","Form","Field","ErrorMessage","Email","props","dispatch","sendInfo","values","path","type","payload","divisor","step_number","history","push","email","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nfunction Email(props) {\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 8, step_number: 7 }\n        });\n        props.history.push('./back-to-black');\n        break;\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 8, step_number: 5 }\n        });\n        props.history.push('./sidewalk');\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div>\n\n      <h2>What is your name and email?</h2>\n      <p>We are happy you are interested in a getting a quote!</p>\n      <p>So that we know who to call you and so that we can send you the details of your quote what is your email address?</p>\n\n      <Formik\n        initialValues={{ email: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            sendInfo(values, 'forward');\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"email\" name=\"email\" required />\n            <ErrorMessage name=\"email\" component=\"div\" />\n            <button onClick={() => sendInfo('', 'back')}><span className='nameEmail_i673'></span>Back</button>\n            <button className='btn primary_btn' type=\"submit\" disabled={isSubmitting}>\n              Go to type of service\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect()(withRouter(Email));"]},"metadata":{},"sourceType":"module"}
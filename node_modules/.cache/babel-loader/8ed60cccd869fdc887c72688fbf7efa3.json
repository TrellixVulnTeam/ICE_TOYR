{"ast":null,"code":"import _slicedToArray from\"/Users/jman/Developer/ice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import{withRouter}from\"react-router-dom\";import mapStoreToProps from'../../redux/mapStoreToProps';import{jsx as _jsx}from\"react/jsx-runtime\";function ProgressBar(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),widthPercent=_useState2[0],setWidthPercent=_useState2[1];useEffect(function(){var calculatePercent=function calculatePercent(){// Number to divide by,\n// the dividend\nvar dividend=100;// Number dividing,\n// the divisor\nvar divisor=props.store.quoteProgress.divisor;// Resulting number,\n// the quotient\nvar quotient=dividend/divisor;// The step number currently loaded\nvar step_number=props.store.quoteProgress.step_number;// Progress of user in form\nsetWidthPercent(quotient*step_number);};calculatePercent();},[props.store.quoteProgress]);return/*#__PURE__*/_jsx(\"div\",{className:\"progressBar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progressBar_container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progressBar_display\",style:{width:\"\".concat(widthPercent,\"%\")}})})});}export default connect(mapStoreToProps)(withRouter(ProgressBar));","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/CustomComponents/ProgressBar.js"],"names":["useEffect","useState","connect","withRouter","mapStoreToProps","ProgressBar","props","widthPercent","setWidthPercent","calculatePercent","dividend","divisor","store","quoteProgress","quotient","step_number","width"],"mappings":"gJAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,C,2CAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,eAEcL,QAAQ,CAAC,CAAD,CAFtB,wCAEnBM,YAFmB,eAELC,eAFK,eAI1BR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAE7B;AACA;AACA,GAAIC,CAAAA,QAAQ,CAAG,GAAf,CAEA;AACA;AACA,GAAIC,CAAAA,OAAO,CAAGL,KAAK,CAACM,KAAN,CAAYC,aAAZ,CAA0BF,OAAxC,CAEA;AACA;AACA,GAAIG,CAAAA,QAAQ,CAAGJ,QAAQ,CAAGC,OAA1B,CAEA;AACA,GAAII,CAAAA,WAAW,CAAGT,KAAK,CAACM,KAAN,CAAYC,aAAZ,CAA0BE,WAA5C,CAEA;AACAP,eAAe,CAACM,QAAQ,CAAGC,WAAZ,CAAf,CACD,CAnBD,CAqBAN,gBAAgB,GACjB,CAvBQ,CAuBN,CAACH,KAAK,CAACM,KAAN,CAAYC,aAAb,CAvBM,CAAT,CA2BA,mBACE,YAAK,SAAS,CAAC,aAAf,uBACE,YAAK,SAAS,CAAC,uBAAf,uBACE,YAAK,SAAS,CAAC,qBAAf,CAAqC,KAAK,CAAE,CAAEG,KAAK,WAAKT,YAAL,KAAP,CAA5C,EADF,EADF,EADF,CAOD,CACD,cAAeL,CAAAA,OAAO,CAACE,eAAD,CAAP,CAAyBD,UAAU,CAACE,WAAD,CAAnC,CAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nfunction ProgressBar(props) {\n\n  const [widthPercent, setWidthPercent] = useState(0);\n\n  useEffect(() => {\n    const calculatePercent = () => {\n\n      // Number to divide by,\n      // the dividend\n      let dividend = 100;\n\n      // Number dividing,\n      // the divisor\n      let divisor = props.store.quoteProgress.divisor;\n\n      // Resulting number,\n      // the quotient\n      let quotient = dividend / divisor;\n\n      // The step number currently loaded\n      let step_number = props.store.quoteProgress.step_number;\n\n      // Progress of user in form\n      setWidthPercent(quotient * step_number);\n    };\n\n    calculatePercent();\n  }, [props.store.quoteProgress]);\n\n\n\n  return (\n    <div className='progressBar'>\n      <div className='progressBar_container'>\n        <div className='progressBar_display' style={{ width: `${widthPercent}%` }}></div>\n      </div>\n    </div>\n  );\n}\nexport default connect(mapStoreToProps)(withRouter(ProgressBar));"]},"metadata":{},"sourceType":"module"}
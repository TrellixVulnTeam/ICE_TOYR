{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/Quote.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport Step1 from './Step1/Step1';\nimport Step2 from './Step2/Step2';\nimport Step3 from './Step3/Step3';\nimport Step4 from './Step4/Step4';\nimport Step5 from './Step5/Step5';\nimport Step6 from './Step6/Step6';\nimport Step7 from './Step7/Step7';\nimport Step8 from './Step8/Step8';\nimport Step9 from './Step9/Step9';\nimport Step10 from './Step10/Step10';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quote(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let pathname = document.URL;\n    pathname = pathname.search('/quote');\n    dispatch({\n      type: 'CHECK_FOR_QUOTE',\n      payload: pathname\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.history.push(`${props.match.path}/step1`),\n      children: \"Start Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step1`,\n      component: Step1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step2`,\n      component: Step2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step3`,\n      component: Step3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step4`,\n      component: Step4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step5`,\n      component: Step5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step6`,\n      component: Step6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step7`,\n      component: Step7\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step8`,\n      component: Step8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step9`,\n      component: Step9\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/step10`,\n      component: Step10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quote, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Quote;\nexport default connect()(withRouter(Quote));\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/Quote.js"],"names":["connect","useDispatch","withRouter","Route","useEffect","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Step10","Quote","props","dispatch","pathname","document","URL","search","type","payload","history","push","match","path"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport Step1 from './Step1/Step1';\nimport Step2 from './Step2/Step2';\nimport Step3 from './Step3/Step3';\nimport Step4 from './Step4/Step4';\nimport Step5 from './Step5/Step5';\nimport Step6 from './Step6/Step6';\nimport Step7 from './Step7/Step7';\nimport Step8 from './Step8/Step8';\nimport Step9 from './Step9/Step9';\nimport Step10 from './Step10/Step10';\n\nfunction Quote(props) {\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let pathname = document.URL;\n    pathname = pathname.search('/quote');\n    dispatch({\n      type: 'CHECK_FOR_QUOTE',\n      payload: pathname\n    });\n  }, [dispatch]);\n\n  return (\n    <div className='quote'>\n      <button onClick={() => props.history.push(`${props.match.path}/step1`)}>Start Quote</button>\n\n      <Route exact path={`${props.match.path}/step1`} component={Step1} />\n      <Route exact path={`${props.match.path}/step2`} component={Step2} />\n      <Route exact path={`${props.match.path}/step3`} component={Step3} />\n      <Route exact path={`${props.match.path}/step4`} component={Step4} />\n      <Route exact path={`${props.match.path}/step5`} component={Step5} />\n      <Route exact path={`${props.match.path}/step6`} component={Step6} />\n      <Route exact path={`${props.match.path}/step7`} component={Step7} />\n      <Route exact path={`${props.match.path}/step8`} component={Step8} />\n      <Route exact path={`${props.match.path}/step9`} component={Step9} />\n      <Route exact path={`${props.match.path}/step10`} component={Step10} />\n\n    </div>\n\n  );\n}\n\nexport default connect()(withRouter(Quote));"]},"metadata":{},"sourceType":"module"}
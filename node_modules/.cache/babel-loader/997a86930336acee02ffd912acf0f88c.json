{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/1TypeService/1TypeService.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TypeService(props) {\n  _s();\n\n  console.log(props.store.customerInfo.service);\n  let check = props.store.customerInfo.service;\n  let dispatch = useDispatch();\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 2\n          }\n        });\n        props.history.push('./sub-service');\n        break;\n\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 1\n          }\n        });\n        props.history.push('./name-email');\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What type of service would you like?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        service: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.service) {\n          errors.service = 'Please pick an option';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          sendInfo(values, 'forward');\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"group\",\n          \"aria-labelledby\": \"my-radio-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"radio\",\n              name: \"service\",\n              checked: check ? \"checked\" : \"\",\n              value: \"Snow Removal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), \"Snow Removal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"radio\",\n              name: \"service\",\n              value: \"Excavating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), \"Excavating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"service\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendInfo('', 'back'),\n          children: \"Go to name and email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Go to location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TypeService, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TypeService;\nexport default connect(mapStoreToProps)(withRouter(TypeService));\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeService\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/1TypeService/1TypeService.js"],"names":["connect","useDispatch","withRouter","Formik","Field","Form","ErrorMessage","mapStoreToProps","TypeService","props","console","log","store","customerInfo","service","check","dispatch","sendInfo","values","path","type","payload","divisor","step_number","history","push","errors","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\n\nfunction TypeService(props) {\n\n  console.log(props.store.customerInfo.service);\n  let check = props.store.customerInfo.service;\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 2 }\n        });\n        props.history.push('./sub-service');\n        break;\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 1 }\n        });\n        props.history.push('./name-email');\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div>\n      <h2>What type of service would you like?</h2>\n\n\n      <Formik\n        initialValues={{ service: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.service) {\n            errors.service = 'Please pick an option';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            sendInfo(values, 'forward');\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div role=\"group\" aria-labelledby=\"my-radio-group\">\n              <label>\n                <Field type=\"radio\" name=\"service\" checked={check ? \"checked\" : \"\"} value='Snow Removal' />\n                Snow Removal\n              </label>\n              <label>\n                <Field type=\"radio\" name=\"service\" value=\"Excavating\" />\n                Excavating\n              </label>\n            </div>\n            <ErrorMessage name=\"service\" component=\"div\" />\n            <button onClick={() => sendInfo('', 'back')}>Go to name and email</button>\n            <button type=\"submit\" disabled={isSubmitting}>Go to location</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(TypeService));"]},"metadata":{},"sourceType":"module"}
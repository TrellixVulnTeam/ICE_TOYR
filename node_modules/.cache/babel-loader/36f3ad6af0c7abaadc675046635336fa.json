{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/ProgressBar/ProgressBar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressBar() {\n  _s();\n\n  const [widthPercent, setWidthPercent] = useState('');\n\n  const calculatePercent = () => {\n    let widthPercent = 0; // Number to divide by,\n    // the dividend\n\n    let dividend = 100; // Number dividing,\n    // the divisor\n\n    let divisor = 6; // Resulting number,\n    // the quotient\n\n    let quotient = dividend / divisor; // The step number currently loaded\n\n    let step_number = 5; // Progress of user in form\n\n    widthPercent = quotient * step_number;\n  };\n\n  useEffect(() => {\n    calculatePercent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progressBar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressBar_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressBar_display\",\n        style: {\n          width: `${widthPercent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressBar, \"yD8Vrh9E401ztOjbWqv4UgARmIs=\");\n\n_c = ProgressBar;\nexport default connect(mapStoreToProps)(withRouter(ProgressBar));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/ProgressBar/ProgressBar.js"],"names":["useEffect","useState","connect","withRouter","mapStoreToProps","ProgressBar","widthPercent","setWidthPercent","calculatePercent","dividend","divisor","quotient","step_number","width"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAErB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAE7B,QAAIF,YAAY,GAAG,CAAnB,CAF6B,CAI7B;AACA;;AACA,QAAIG,QAAQ,GAAG,GAAf,CAN6B,CAQ7B;AACA;;AACA,QAAIC,OAAO,GAAG,CAAd,CAV6B,CAY7B;AACA;;AACA,QAAIC,QAAQ,GAAGF,QAAQ,GAAGC,OAA1B,CAd6B,CAgB7B;;AACA,QAAIE,WAAW,GAAG,CAAlB,CAjB6B,CAmB7B;;AACAN,IAAAA,YAAY,GAAGK,QAAQ,GAAGC,WAA1B;AACD,GArBD;;AAuBAZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAG,GAAEP,YAAa;AAAzB;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxCQD,W;;KAAAA,W;AAyCT,eAAeH,OAAO,CAACE,eAAD,CAAP,CAAyBD,UAAU,CAACE,WAAD,CAAnC,CAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nfunction ProgressBar() {\n\n  const [widthPercent, setWidthPercent] = useState('');\n\n  const calculatePercent = () => {\n\n    let widthPercent = 0;\n\n    // Number to divide by,\n    // the dividend\n    let dividend = 100;\n\n    // Number dividing,\n    // the divisor\n    let divisor = 6;\n\n    // Resulting number,\n    // the quotient\n    let quotient = dividend / divisor;\n\n    // The step number currently loaded\n    let step_number = 5;\n\n    // Progress of user in form\n    widthPercent = quotient * step_number;\n  };\n\n  useEffect(() => {\n    calculatePercent();\n  }, []);\n\n\n\n  return (\n    <div className='progressBar'>\n      <div className='progressBar_container'>\n        <div className='progressBar_display' style={{ width: `${widthPercent}%` }}></div>\n      </div>\n    </div>\n  );\n}\nexport default connect(mapStoreToProps)(withRouter(ProgressBar));"]},"metadata":{},"sourceType":"module"}
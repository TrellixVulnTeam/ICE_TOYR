{"ast":null,"code":"// Info on creating custom components\n// https://sohnya.hashnode.dev/how-to-build-custom-component-button-in-react\nimport{connect}from'react-redux';import{withRouter}from'react-router-dom';import mapStoreToProps from'../../redux/mapStoreToProps';// Property | option 1, option 2, etc.\n// --------------------------------- //\n// style | 'Primary', 'Secondary'\n// click | String, Function\n// title | 'Text the user will see on the button'\nimport{jsx as _jsx}from\"react/jsx-runtime\";function ICEBtn(props){var clkinpt;var check=typeof props.click==='string';if(check){clkinpt=function clkinpt(){return props.history.push(props.click);};}else{clkinpt=props.click;}var btnStyle='';if(props.btnStyle==='Primary'||props.btnStyle===undefined){btnStyle='primary_btn';}else{btnStyle='secondary_btn';}return/*#__PURE__*/_jsx(\"button\",{className:'btn '+btnStyle,type:\"submit\",onClick:clkinpt,children:props.title});}export default connect(mapStoreToProps)(withRouter(ICEBtn));","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/CustomComponents/ICEBtn.js"],"names":["connect","withRouter","mapStoreToProps","ICEBtn","props","clkinpt","check","click","history","push","btnStyle","undefined","title"],"mappings":"AACA;AACA;AACA,OAASA,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,CAEA;AACA;AACA;AACA;AACA;2CAEA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CAErB,GAAIC,CAAAA,OAAJ,CACA,GAAIC,CAAAA,KAAK,CAAG,MAAOF,CAAAA,KAAK,CAACG,KAAb,GAAuB,QAAnC,CAEA,GAAID,KAAJ,CAAW,CACTD,OAAO,CAAG,yBAAMD,CAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmBL,KAAK,CAACG,KAAzB,CAAN,EAAV,CACD,CAFD,IAEO,CACLF,OAAO,CAAGD,KAAK,CAACG,KAAhB,CACD,CAED,GAAIG,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAKN,KAAK,CAACM,QAAN,GAAmB,SAApB,EAAmCN,KAAK,CAACM,QAAN,GAAmBC,SAA1D,CAAsE,CACpED,QAAQ,CAAG,aAAX,CACD,CAFD,IAEO,CACLA,QAAQ,CAAG,eAAX,CACD,CAGD,mBAAO,eAAQ,SAAS,CAAE,OAASA,QAA5B,CAAsC,IAAI,CAAC,QAA3C,CAAoD,OAAO,CAAEL,OAA7D,UAAuED,KAAK,CAACQ,KAA7E,EAAP,CACD,CAED,cAAeZ,CAAAA,OAAO,CAACE,eAAD,CAAP,CAAyBD,UAAU,CAACE,MAAD,CAAnC,CAAf","sourcesContent":["\n// Info on creating custom components\n// https://sohnya.hashnode.dev/how-to-build-custom-component-button-in-react\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// Property | option 1, option 2, etc.\n// --------------------------------- //\n// style | 'Primary', 'Secondary'\n// click | String, Function\n// title | 'Text the user will see on the button'\n\nfunction ICEBtn(props) {\n\n  let clkinpt;\n  let check = typeof props.click === 'string';\n\n  if (check) {\n    clkinpt = () => props.history.push(props.click);\n  } else {\n    clkinpt = props.click;\n  }\n\n  let btnStyle = '';\n  if ((props.btnStyle === 'Primary') || (props.btnStyle === undefined)) {\n    btnStyle = 'primary_btn';\n  } else {\n    btnStyle = 'secondary_btn';\n  }\n\n\n  return <button className={'btn ' + btnStyle} type=\"submit\" onClick={clkinpt}>{props.title}</button>;\n}\n\nexport default connect(mapStoreToProps)(withRouter(ICEBtn));\n"]},"metadata":{},"sourceType":"module"}
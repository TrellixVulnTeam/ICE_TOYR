{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/1TypeService/1TypeService.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TypeService(props) {\n  _s();\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (property, e) => {\n    console.log('checking value of e: ', e.target.value);\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: {\n        [property]: e.target.value\n      }\n    });\n  };\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 7,\n        step_number: 2\n      }\n    });\n    props.history.push('./sub-service');\n  };\n\n  const goBack = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 7,\n        step_number: 1\n      }\n    });\n    props.history.push('./name-email');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What type of service would you like?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        picked: ''\n      },\n      onSubmit: async values => {\n        goForward();\n        await new Promise(r => setTimeout(r, 500));\n        alert(JSON.stringify(values, null, 2));\n        sendInfo();\n      },\n      children: ({\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"group\",\n          \"aria-labelledby\": \"my-radio-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"radio\",\n              name: \"service\",\n              value: \"Snow Removal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), \"Snow Removal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"radio\",\n              name: \"service\",\n              value: \"Excavating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), \"Excavating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Picked: \", values.picked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goBack,\n          children: \"Go home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TypeService, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TypeService;\nexport default connect()(withRouter(TypeService));\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeService\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/1TypeService/1TypeService.js"],"names":["useEffect","connect","useDispatch","withRouter","Formik","Field","Form","TypeService","props","dispatch","sendInfo","property","e","console","log","target","value","type","payload","goForward","divisor","step_number","history","push","goBack","picked","values","Promise","r","setTimeout","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\n\n\nfunction TypeService(props) {\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (property, e) => {\n    console.log('checking value of e: ', e.target.value);\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload:\n        { [property]: e.target.value }\n    });\n  }\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 7, step_number: 2 }\n    });\n    props.history.push('./sub-service');\n  }\n\n  const goBack = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 7, step_number: 1 }\n    });\n    props.history.push('./name-email')\n  }\n\n  return (\n    <div>\n      <h2>What type of service would you like?</h2>\n\n      <Formik\n        initialValues={{\n          picked: '',\n        }}\n        onSubmit={async (values) => {\n          goForward();\n          await new Promise((r) => setTimeout(r, 500));\n          alert(JSON.stringify(values, null, 2));\n          sendInfo();\n        }}\n      >\n        {({ values }) => (\n          <Form>\n            <div role=\"group\" aria-labelledby=\"my-radio-group\">\n              <label>\n                <Field type=\"radio\" name=\"service\" value=\"Snow Removal\" />\n                Snow Removal\n              </label>\n              <label>\n                <Field type=\"radio\" name=\"service\" value=\"Excavating\" />\n                Excavating\n              </label>\n              <div>Picked: {values.picked}</div>\n            </div>\n            <button onClick={goBack}>Go home</button>\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect()(withRouter(TypeService));"]},"metadata":{},"sourceType":"module"}
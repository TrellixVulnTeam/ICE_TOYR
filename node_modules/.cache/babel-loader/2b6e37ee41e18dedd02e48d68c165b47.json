{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/6Sidewalk/6Sidewalk.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { useEffect, useState } from 'react';\nimport NextButton from '../../CustomComponents/NextButton';\nimport Door from '../../../a_assets/images/door.png';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidewalk(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const sidewalk1 = ['1', '2'];\n  const sidewalk2 = ['3', 'none'];\n  const pics1 = [Door, Door];\n  const pics2 = [Door, CloseIcon];\n  const [isChecked, setIsChecked] = useState('');\n  useEffect(() => {\n    setIsChecked(props.store.customerInfo.sidewalk);\n  }, [props.store.customerInfo.sidewalk]);\n\n  const sendInfo = values => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 8,\n        step_number: step_number + 1\n      }\n    });\n    props.history.push('./email');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Would you like us to shovel and salt to any doors?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We charge for the amount of doors or locations we shovel to. Examples: front door, back door, garbage cans, city sidewalk, etc.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        sidewalk: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (props.store.customerInfo.sidewalk) {\n          return errors;\n        }\n\n        if (!values.sidewalk) {\n          errors.sidewalk = 'Please pick an option';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          if (props.store.customerInfo.sidewalk) {\n            sendInfo({\n              service: props.store.customerInfo.sidewalk\n            }, 'forward');\n          } else {\n            sendInfo(values);\n          }\n\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_optionsContainer\",\n          role: \"group\",\n          \"aria-labelledby\": \"my-radio-group\",\n          children: sidewalk1.map(s => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"radio\",\n              name: \"sidewalk\",\n              value: s,\n              checked: isChecked === s,\n              onClick: e => setIsChecked(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), s]\n          }, s, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"sidewalk\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n          disabled: isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidewalk, \"TQ5P6AuUVH1AmkyiQcV0i1q3tZA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Sidewalk;\nexport default connect(mapStoreToProps)(withRouter(Sidewalk));\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidewalk\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/6Sidewalk/6Sidewalk.js"],"names":["connect","useDispatch","withRouter","Formik","Field","Form","ErrorMessage","mapStoreToProps","useEffect","useState","NextButton","Door","CloseIcon","Sidewalk","props","dispatch","sidewalk1","sidewalk2","pics1","pics2","isChecked","setIsChecked","store","customerInfo","sidewalk","sendInfo","values","step_number","quoteProgress","type","payload","divisor","history","push","errors","setSubmitting","setTimeout","service","isSubmitting","map","s","e","target","value"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { useEffect, useState } from 'react';\nimport NextButton from '../../CustomComponents/NextButton';\nimport Door from '../../../a_assets/images/door.png';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction Sidewalk(props) {\n\n  let dispatch = useDispatch();\n\n  const sidewalk1 = ['1', '2'];\n  const sidewalk2 = ['3', 'none'];\n  const pics1 = [Door, Door];\n  const pics2 = [Door, CloseIcon];\n\n\n  const [isChecked, setIsChecked] = useState('');\n\n  useEffect(() => {\n    setIsChecked(props.store.customerInfo.sidewalk);\n  }, [props.store.customerInfo.sidewalk]);\n\n  const sendInfo = (values) => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 8, step_number: step_number + 1 }\n    });\n    props.history.push('./email');\n  };\n\n  return (\n    <div className=\"quoteStep_container\">\n      <h2>Would you like us to shovel and salt to any doors?</h2>\n      <p>We charge for the amount of doors or locations we shovel to.\n        Examples: front door, back door, garbage cans, city sidewalk, etc.</p>\n\n      <Formik\n        initialValues={{ sidewalk: '' }}\n        validate={values => {\n          const errors = {};\n\n          if (props.store.customerInfo.sidewalk) {\n            return errors;\n          }\n          if (!values.sidewalk) {\n            errors.sidewalk = 'Please pick an option';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n\n            if (props.store.customerInfo.sidewalk) {\n              sendInfo({ service: props.store.customerInfo.sidewalk }, 'forward');\n            } else {\n              sendInfo(values);\n            }\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className='quoteStep_optionsContainer' role=\"group\" aria-labelledby=\"my-radio-group\">\n              {sidewalk1.map(s => (\n                <label key={s}>\n                  <Field\n                    type=\"radio\"\n                    name=\"sidewalk\"\n                    value={s}\n                    checked={isChecked === s}\n                    onClick={e => setIsChecked(e.target.value)}\n                  />\n                  {s}\n                </label>\n              ))}\n            </div>\n            <ErrorMessage name=\"sidewalk\" component=\"div\" />\n            <NextButton disabled={isSubmitting} />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Sidewalk));"]},"metadata":{},"sourceType":"module"}
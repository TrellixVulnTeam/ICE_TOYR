{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/CustomComponents/ICEBtn.js\";\n// Info on creating custom components\n// https://sohnya.hashnode.dev/how-to-build-custom-component-button-in-react\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../redux/mapStoreToProps'; // Property | option 1, option 2, etc.\n// --------------------------------- //\n// style | 'Primary', 'Secondary'\n// click | String, Function\n// title | 'Text the user will see on the button'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ICEBtn(props) {\n  let clkinpt;\n  let check = typeof props.click === 'string';\n\n  if (check) {\n    clkinpt = () => props.history.push(props.click);\n  } else {\n    clkinpt = props.click;\n  }\n\n  let btnStyle = '';\n\n  if (props.btnStyle === 'Primary' || props.btnStyle === undefined) {\n    btnStyle = 'primary_btn';\n  } else {\n    btnStyle = 'secondary_btn';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: 'btn ' + btnStyle,\n    type: \"submit\",\n    onClick: clkinpt,\n    children: props.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ICEBtn;\nexport default connect(mapStoreToProps)(withRouter(ICEBtn));\n\nvar _c;\n\n$RefreshReg$(_c, \"ICEBtn\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/CustomComponents/ICEBtn.js"],"names":["connect","withRouter","mapStoreToProps","ICEBtn","props","clkinpt","check","click","history","push","btnStyle","undefined","title"],"mappings":";AACA;AACA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAErB,MAAIC,OAAJ;AACA,MAAIC,KAAK,GAAG,OAAOF,KAAK,CAACG,KAAb,KAAuB,QAAnC;;AAEA,MAAID,KAAJ,EAAW;AACTD,IAAAA,OAAO,GAAG,MAAMD,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmBL,KAAK,CAACG,KAAzB,CAAhB;AACD,GAFD,MAEO;AACLF,IAAAA,OAAO,GAAGD,KAAK,CAACG,KAAhB;AACD;;AAED,MAAIG,QAAQ,GAAG,EAAf;;AACA,MAAKN,KAAK,CAACM,QAAN,KAAmB,SAApB,IAAmCN,KAAK,CAACM,QAAN,KAAmBC,SAA1D,EAAsE;AACpED,IAAAA,QAAQ,GAAG,aAAX;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,GAAG,eAAX;AACD;;AAGD,sBAAO;AAAQ,IAAA,SAAS,EAAE,SAASA,QAA5B;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAoD,IAAA,OAAO,EAAEL,OAA7D;AAAA,cAAuED,KAAK,CAACQ;AAA7E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KApBQT,M;AAsBT,eAAeH,OAAO,CAACE,eAAD,CAAP,CAAyBD,UAAU,CAACE,MAAD,CAAnC,CAAf","sourcesContent":["\n// Info on creating custom components\n// https://sohnya.hashnode.dev/how-to-build-custom-component-button-in-react\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// Property | option 1, option 2, etc.\n// --------------------------------- //\n// style | 'Primary', 'Secondary'\n// click | String, Function\n// title | 'Text the user will see on the button'\n\nfunction ICEBtn(props) {\n\n  let clkinpt;\n  let check = typeof props.click === 'string';\n\n  if (check) {\n    clkinpt = () => props.history.push(props.click);\n  } else {\n    clkinpt = props.click;\n  }\n\n  let btnStyle = '';\n  if ((props.btnStyle === 'Primary') || (props.btnStyle === undefined)) {\n    btnStyle = 'primary_btn';\n  } else {\n    btnStyle = 'secondary_btn';\n  }\n\n\n  return <button className={'btn ' + btnStyle} type=\"submit\" onClick={clkinpt}>{props.title}</button>;\n}\n\nexport default connect(mapStoreToProps)(withRouter(ICEBtn));\n"]},"metadata":{},"sourceType":"module"}
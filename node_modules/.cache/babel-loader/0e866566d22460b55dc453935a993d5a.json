{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/3Name/3Name.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Name(props) {\n  _s();\n\n  let dispatch = useDispatch();\n\n  const sendInfo = values => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 8,\n        step_number: step_number + 1\n      }\n    });\n    props.history.push('./location');\n  };\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = 'Required';\n    } else if (values.name.length > 15) {\n      errors.name = 'Must be 15 characters or less';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: props.store.customerInfo.name === '' ? '' : props.store.customerInfo.name\n    },\n    validate,\n    onSubmit: values => {\n      sendInfo(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quoteStep_container_title\",\n      children: \"What is your first name?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quoteStep_container_descrip\",\n      children: \"We will use this for a more personalized experience throughout this quote.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteStep_textFormContainer quoteStep_singleTextFormContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_textContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"quoteStep_label\",\n            htmlFor: \"name\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"quoteStep_text\",\n            id: \"name\",\n            name: \"name\",\n            type: \"text\",\n            onChange: formik.handleChange,\n            value: formik.values.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: formik.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 35\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_nextBtn_container\",\n          children: /*#__PURE__*/_jsxDEV(NextButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Name, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = Name;\nexport default connect(mapStoreToProps)(withRouter(Name));\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/3Name/3Name.js"],"names":["connect","useDispatch","withRouter","useFormik","mapStoreToProps","NextButton","Name","props","dispatch","sendInfo","values","step_number","store","quoteProgress","type","payload","divisor","history","push","validate","errors","name","length","formik","initialValues","customerInfo","onSubmit","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\n\n\nfunction Name(props) {\n\n  let dispatch = useDispatch();\n\n\n  const sendInfo = (values) => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 8, step_number: step_number + 1 }\n    });\n    props.history.push('./location');\n  };\n\n  const validate = values => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = 'Required';\n    } else if (values.name.length > 15) {\n      errors.name = 'Must be 15 characters or less';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: props.store.customerInfo.name === '' ? '' : props.store.customerInfo.name,\n    },\n    validate,\n    onSubmit: (values) => {\n      sendInfo(values);\n    },\n  });\n\n  return (\n    <div className='quoteStep_container'>\n\n      <h2 className='quoteStep_container_title'>What is your first name?</h2>\n      <p className='quoteStep_container_descrip'>We will use this for a more personalized experience throughout this quote.</p>\n\n      <div className='quoteStep_textFormContainer quoteStep_singleTextFormContainer'>\n        <form onSubmit={formik.handleSubmit}>\n          <div className='quoteStep_textContainer'>\n            <label className='quoteStep_label' htmlFor=\"name\">First Name</label>\n            <input\n              className='quoteStep_text'\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n            />\n            {formik.errors.name ? <div>{formik.errors.name}</div> : null}\n          </div>\n          <div className='quoteStep_nextBtn_container'>\n            <NextButton />\n          </div>\n        </form>\n      </div>\n    </div >\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Name));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/5Driveway/5Driveway.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { useEffect, useState } from 'react';\nimport NextButton from '../../CustomComponents/NextButton';\nimport Single_Driveway from '../../../a_assets/images/single_driveway.png';\nimport Double_Driveway from '../../../a_assets/images/double_driveway.png';\nimport Triple_Driveway from '../../../a_assets/images/triple_driveway.png';\nimport ICE_Question from '../../../a_assets/images/ICE_Question.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Driveway(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const driveway = ['Single Car', 'Double Car', 'Triple Car', 'My driveway is different'];\n  const pics = [Single_Driveway, Double_Driveway, Triple_Driveway, ICE_Question];\n  const [isChecked, setIsChecked] = useState('');\n  useEffect(() => {\n    setIsChecked(props.store.customerInfo.driveway);\n  }, [props.store.customerInfo.driveway]);\n\n  const sendInfo = values => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 8,\n        step_number: step_number + 1\n      }\n    });\n    props.history.push('./sidewalk');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What type of driveway do you have?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        driveway: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (props.store.customerInfo.driveway) {\n          return errors;\n        }\n\n        if (!values.driveway) {\n          errors.driveway = 'Please pick an option';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          if (props.store.customerInfo.driveway) {\n            sendInfo({\n              service: props.store.customerInfo.driveway\n            }, 'forward');\n          } else {\n            sendInfo(values);\n          }\n\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_optionsContainer\",\n          role: \"group\",\n          \"aria-labelledby\": \"my-radio-group\",\n          children: driveway.map((d, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_options\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"quoteStep_label\",\n                children: d\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"radio\",\n                name: \"driveway\",\n                value: d,\n                checked: isChecked === d,\n                onClick: e => setIsChecked(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: pics[i],\n                alt: d,\n                className: \"quoteStep_label_img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, d, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"driveway\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_nextBtn_container\",\n          children: /*#__PURE__*/_jsxDEV(NextButton, {\n            disabled: isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Driveway, \"TQ5P6AuUVH1AmkyiQcV0i1q3tZA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Driveway;\nexport default connect(mapStoreToProps)(withRouter(Driveway));\n\nvar _c;\n\n$RefreshReg$(_c, \"Driveway\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/5Driveway/5Driveway.js"],"names":["connect","useDispatch","withRouter","Formik","Field","Form","ErrorMessage","mapStoreToProps","useEffect","useState","NextButton","Single_Driveway","Double_Driveway","Triple_Driveway","ICE_Question","Driveway","props","dispatch","driveway","pics","isChecked","setIsChecked","store","customerInfo","sendInfo","values","step_number","quoteProgress","type","payload","divisor","history","push","errors","setSubmitting","setTimeout","service","isSubmitting","map","d","i","e","target","value"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { useEffect, useState } from 'react';\nimport NextButton from '../../CustomComponents/NextButton';\n\nimport Single_Driveway from '../../../a_assets/images/single_driveway.png';\nimport Double_Driveway from '../../../a_assets/images/double_driveway.png';\nimport Triple_Driveway from '../../../a_assets/images/triple_driveway.png';\nimport ICE_Question from '../../../a_assets/images/ICE_Question.png';\n\nfunction Driveway(props) {\n\n  let dispatch = useDispatch();\n\n  const driveway = ['Single Car', 'Double Car', 'Triple Car', 'My driveway is different'];\n  const pics = [Single_Driveway, Double_Driveway, Triple_Driveway, ICE_Question];\n\n  const [isChecked, setIsChecked] = useState('');\n\n  useEffect(() => {\n    setIsChecked(props.store.customerInfo.driveway);\n  }, [props.store.customerInfo.driveway]);\n\n  const sendInfo = (values) => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 8, step_number: step_number + 1 }\n    });\n    props.history.push('./sidewalk');\n  };\n\n  return (\n    <div className=\"quoteStep_container\">\n      <h2>What type of driveway do you have?</h2>\n\n      <Formik\n        initialValues={{ driveway: '' }}\n        validate={values => {\n          const errors = {};\n\n          if (props.store.customerInfo.driveway) {\n            return errors;\n          }\n          if (!values.driveway) {\n            errors.driveway = 'Please pick an option';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n\n            if (props.store.customerInfo.driveway) {\n              sendInfo({ service: props.store.customerInfo.driveway }, 'forward');\n            } else {\n              sendInfo(values);\n            }\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className='quoteStep_optionsContainer' role=\"group\" aria-labelledby=\"my-radio-group\">\n              {driveway.map((d, i) => (\n                <div className='quoteStep_options'>\n                  <label key={d}>\n                    <p className='quoteStep_label'>{d}</p>\n                    <Field\n                      type=\"radio\"\n                      name=\"driveway\"\n                      value={d}\n                      checked={isChecked === d}\n                      onClick={e => setIsChecked(e.target.value)}\n                    />\n                    <img src={pics[i]} alt={d} className='quoteStep_label_img' />\n                  </label>\n                </div>\n              ))}\n            </div>\n            <ErrorMessage name=\"driveway\" component=\"div\" />\n            <div className='quoteStep_nextBtn_container'>\n              <NextButton disabled={isSubmitting} />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Driveway));"]},"metadata":{},"sourceType":"module"}
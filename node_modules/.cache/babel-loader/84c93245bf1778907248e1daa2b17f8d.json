{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/0NameEmail/0NameEmail.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NameEmail(props) {\n  _s();\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 1\n          }\n        });\n        props.history.push('./type-of-service');\n        break;\n\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 0\n          }\n        });\n        props.history.push('/');\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What is your name and email?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We are happy you are interested in a getting a quote!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"So that we know who to call you and so that we can send you the details of your quote what is your email address?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NameEmail, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NameEmail;\nexport default connect()(withRouter(NameEmail));\n\nvar _c;\n\n$RefreshReg$(_c, \"NameEmail\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/0NameEmail/0NameEmail.js"],"names":["connect","useDispatch","withRouter","Formik","Form","Field","ErrorMessage","NameEmail","props","dispatch","sendInfo","values","path","type","payload","divisor","step_number","history","push"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAExB,MAAIC,QAAQ,GAAGR,WAAW,EAA1B;;AAEA,QAAMS,QAAQ,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AACjC,YAAQA,IAAR;AACE,WAAK,SAAL;AACEH,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,iBADC;AAEPC,UAAAA,OAAO,EAAEH;AAFF,SAAD,CAAR;AAIAF,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,gBADC;AAEPC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,OAAO,EAAE,CAAX;AAAcC,YAAAA,WAAW,EAAE;AAA3B;AAFF,SAAD,CAAR;AAIAR,QAAAA,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,mBAAnB;AACA;;AACF,WAAK,MAAL;AACET,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,gBADC;AAEPC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,OAAO,EAAE,CAAX;AAAcC,YAAAA,WAAW,EAAE;AAA3B;AAFF,SAAD,CAAR;AAIAR,QAAAA,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACA;;AACF;AAnBF;AAqBD,GAtBD;;AAwBA,sBACE;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAvEQX,S;UAEQN,W;;;KAFRM,S;AAyET,eAAeP,OAAO,GAAGE,UAAU,CAACK,SAAD,CAAb,CAAtB","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nfunction NameEmail(props) {\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 1 }\n        });\n        props.history.push('./type-of-service');\n        break;\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 0 }\n        });\n        props.history.push('/');\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div>\n\n      <h2>What is your name and email?</h2>\n      <p>We are happy you are interested in a getting a quote!</p>\n      <p>So that we know who to call you and so that we can send you the details of your quote what is your email address?</p>\n\n      {/* <Formik\n        initialValues={{ email: '', name: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            sendInfo(values, 'forward');\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n            <Field type=\"name\" name=\"name\" required />\n            <ErrorMessage name=\"name\" component=\"div\" />\n            <button onClick={sendInfo('', 'back')}>Go home</button>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Go to type of service\n            </button>\n          </Form>\n        )}\n      </Formik> */}\n    </div>\n  );\n}\n\nexport default connect()(withRouter(NameEmail));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/Quote.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport TypeService from './1TypeService/1TypeService';\nimport SubType from './2SubType/2SubType';\nimport Location from './3Location/3Location';\nimport Driveway from './4Driveway/4Driveway';\nimport Sidewalk from './5Sidewalk/5Sidewalk';\nimport BackToBlack from './6BackToBlack/6BackToBlack';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport ThankYou from './7ThankYou/7ThankYou';\nimport NameEmail from './0NameEmail/0NameEmail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quote(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n    let pathname = document.URL.search('/quote'); // let pathCheck = document.URL;\n\n    console.log(document.URL.includes('type-of-service'));\n    dispatch({\n      type: 'CHECK_FOR_QUOTE',\n      payload: pathname\n    }); // const loadPath = () => {\n    //   let step;\n    //   switch (pathCheck) {\n    //     case pathCheck.includes('name-email'):\n    //       step = 0;\n    //       break;\n    //     case pathCheck.includes('type-of-service'):\n    //       step = 1;\n    //       break;\n    //     case pathCheck.includes('sub-service'):\n    //       step = 2;\n    //       break;\n    //     case pathCheck.includes('location'):\n    //       step = 3;\n    //       break;\n    //     case pathCheck.includes('driveway'):\n    //       step = 4;\n    //       break;\n    //     case pathCheck.includes('sidewalk'):\n    //       step = 5;\n    //       break;\n    //     case pathCheck.includes('back-to-black'):\n    //       step = 6;\n    //       break;\n    //     case pathCheck.includes('thank-you'):\n    //       step = 7;\n    //       break;\n    //     default:\n    //       break;\n    //   }\n    //   dispatch({\n    //     type: 'QUOTE_PROGRESS',\n    //     payload: { divisor: 7, step_number: step }\n    //   });\n    // }\n\n    const loadCustomer = () => {\n      dispatch({\n        type: 'UPDATE_CUSTOMER',\n        payload: {\n          name: '',\n          email: '',\n          service: ''\n        }\n      });\n    }; // loadPath();\n\n\n    loadCustomer();\n  }, [dispatch]);\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 7,\n        step_number: 0\n      }\n    });\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goForward,\n      children: \"Exit Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/name-email`,\n      component: NameEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/type-of-service`,\n      component: TypeService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/sub-service`,\n      component: SubType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/location`,\n      component: Location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/driveway`,\n      component: Driveway\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/sidewalk`,\n      component: Sidewalk\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/back-to-black`,\n      component: BackToBlack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/thank-you`,\n      component: ThankYou\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quote, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Quote;\nexport default connect()(withRouter(Quote));\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/Quote.js"],"names":["connect","useDispatch","withRouter","Route","useEffect","TypeService","SubType","Location","Driveway","Sidewalk","BackToBlack","ProgressBar","ThankYou","NameEmail","Quote","props","dispatch","document","body","scrollTop","documentElement","pathname","URL","search","console","log","includes","type","payload","loadCustomer","name","email","service","goForward","divisor","step_number","history","push","match","path"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAEpB,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACAG,EAAAA,SAAS,CAAC,MAAM;AAEda,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0BF,QAAQ,CAACG,eAAT,CAAyBD,SAAzB,GAAqC,CAA/D;AAEA,QAAIE,QAAQ,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,MAAb,CAAoB,QAApB,CAAf,CAJc,CAKd;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACK,GAAT,CAAaI,QAAb,CAAsB,iBAAtB,CAAZ;AAEAV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEP;AAFF,KAAD,CAAR,CARc,CAad;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMQ,YAAY,GAAG,MAAM;AACzBb,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAE;AACPE,UAAAA,IAAI,EAAE,EADC;AAEPC,UAAAA,KAAK,EAAE,EAFA;AAGPC,UAAAA,OAAO,EAAE;AAHF;AAFF,OAAD,CAAR;AAQD,KATD,CAjDc,CA2Dd;;;AACAH,IAAAA,YAAY;AACb,GA7DQ,EA6DN,CAACb,QAAD,CA7DM,CAAT;;AA+DA,QAAMiB,SAAS,GAAG,MAAM;AACtBjB,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAE;AAAEM,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,WAAW,EAAE;AAA3B;AAFF,KAAD,CAAR;AAIApB,IAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEJ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAElB,KAAK,CAACuB,KAAN,CAAYC,IAAK,aAAvC;AAAqD,MAAA,SAAS,EAAE1B;AAAhE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACuB,KAAN,CAAYC,IAAK,kBAAvC;AAA0D,MAAA,SAAS,EAAElC;AAArE;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACuB,KAAN,CAAYC,IAAK,cAAvC;AAAsD,MAAA,SAAS,EAAEjC;AAAjE;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAES,KAAK,CAACuB,KAAN,CAAYC,IAAK,WAAvC;AAAmD,MAAA,SAAS,EAAEhC;AAA9D;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACuB,KAAN,CAAYC,IAAK,WAAvC;AAAmD,MAAA,SAAS,EAAE/B;AAA9D;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACuB,KAAN,CAAYC,IAAK,WAAvC;AAAmD,MAAA,SAAS,EAAE9B;AAA9D;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACuB,KAAN,CAAYC,IAAK,gBAAvC;AAAwD,MAAA,SAAS,EAAE7B;AAAnE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEK,KAAK,CAACuB,KAAN,CAAYC,IAAK,YAAvC;AAAoD,MAAA,SAAS,EAAE3B;AAA/D;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3FQE,K;UAEUb,W;;;KAFVa,K;AA6FT,eAAed,OAAO,GAAGE,UAAU,CAACY,KAAD,CAAb,CAAtB","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter, Route } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport TypeService from './1TypeService/1TypeService';\nimport SubType from './2SubType/2SubType';\nimport Location from './3Location/3Location';\nimport Driveway from './4Driveway/4Driveway';\nimport Sidewalk from './5Sidewalk/5Sidewalk';\nimport BackToBlack from './6BackToBlack/6BackToBlack';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport ThankYou from './7ThankYou/7ThankYou';\nimport NameEmail from './0NameEmail/0NameEmail';\n\nfunction Quote(props) {\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n\n    let pathname = document.URL.search('/quote');\n    // let pathCheck = document.URL;\n    console.log(document.URL.includes('type-of-service'));\n\n    dispatch({\n      type: 'CHECK_FOR_QUOTE',\n      payload: pathname\n    });\n\n    // const loadPath = () => {\n    //   let step;\n    //   switch (pathCheck) {\n    //     case pathCheck.includes('name-email'):\n    //       step = 0;\n    //       break;\n    //     case pathCheck.includes('type-of-service'):\n    //       step = 1;\n    //       break;\n    //     case pathCheck.includes('sub-service'):\n    //       step = 2;\n    //       break;\n    //     case pathCheck.includes('location'):\n    //       step = 3;\n    //       break;\n    //     case pathCheck.includes('driveway'):\n    //       step = 4;\n    //       break;\n    //     case pathCheck.includes('sidewalk'):\n    //       step = 5;\n    //       break;\n    //     case pathCheck.includes('back-to-black'):\n    //       step = 6;\n    //       break;\n    //     case pathCheck.includes('thank-you'):\n    //       step = 7;\n    //       break;\n    //     default:\n    //       break;\n    //   }\n    //   dispatch({\n    //     type: 'QUOTE_PROGRESS',\n    //     payload: { divisor: 7, step_number: step }\n    //   });\n    // }\n\n    const loadCustomer = () => {\n      dispatch({\n        type: 'UPDATE_CUSTOMER',\n        payload: {\n          name: '',\n          email: '',\n          service: '',\n        },\n      });\n    }\n    // loadPath();\n    loadCustomer();\n  }, [dispatch]);\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 7, step_number: 0 }\n    });\n    props.history.push('/');\n  }\n\n  return (\n    <div className='quote'>\n      <ProgressBar />\n      <button onClick={goForward}>Exit Quote</button>\n\n      <Route exact path={`${props.match.path}/name-email`} component={NameEmail} />\n      <Route exact path={`${props.match.path}/type-of-service`} component={TypeService} />\n      <Route exact path={`${props.match.path}/sub-service`} component={SubType} />\n      <Route exact path={`${props.match.path}/location`} component={Location} />\n      <Route exact path={`${props.match.path}/driveway`} component={Driveway} />\n      <Route exact path={`${props.match.path}/sidewalk`} component={Sidewalk} />\n      <Route exact path={`${props.match.path}/back-to-black`} component={BackToBlack} />\n      <Route exact path={`${props.match.path}/thank-you`} component={ThankYou} />\n\n    </div>\n\n  );\n}\n\nexport default connect()(withRouter(Quote));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Draw/Draw.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Line, Text } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Draw = () => {\n  _s();\n\n  const [tool, setTool] = React.useState('pen');\n  const [lines, setLines] = React.useState([]);\n  const isDrawing = React.useRef(false);\n\n  const handleMouseDown = e => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, {\n      tool,\n      points: [pos.x, pos.y]\n    }]);\n  };\n\n  const handleMouseMove = e => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1]; // add point\n\n    lastLine.points = lastLine.points.concat([point.x, point.y]); // replace last\n\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stage, {\n      width: window.innerWidth,\n      la: true,\n      height: window.innerHeight,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          text: \"Just start drawing\",\n          x: 5,\n          y: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: \"#df4b26\",\n          strokeWidth: 10,\n          tension: 0.5,\n          lineCap: \"round\",\n          globalCompositeOperation: line.tool === 'eraser' ? 'destination-out' : 'source-over'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: tool,\n      onChange: e => {\n        setTool(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pen\",\n        children: \"Pen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"eraser\",\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Draw, \"+sGXtfGMblo/UdheMwgOQawT2ss=\");\n\n_c = Draw;\nexport default Draw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Draw/Draw.js"],"names":["React","render","Stage","Layer","Line","Text","Draw","tool","setTool","useState","lines","setLines","isDrawing","useRef","handleMouseDown","e","current","pos","target","getStage","getPointerPosition","points","x","y","handleMouseMove","stage","point","lastLine","length","concat","splice","handleMouseUp","window","innerWidth","innerHeight","map","line","i","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,QAAyC,aAAzC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAMG,SAAS,GAAGZ,KAAK,CAACa,MAAN,CAAa,KAAb,CAAlB;;AAEA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC7BH,IAAAA,SAAS,CAACI,OAAV,GAAoB,IAApB;AACA,UAAMC,GAAG,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,GAAoBC,kBAApB,EAAZ;AACAT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEH,MAAAA,IAAF;AAAQc,MAAAA,MAAM,EAAE,CAACJ,GAAG,CAACK,CAAL,EAAQL,GAAG,CAACM,CAAZ;AAAhB,KAAX,CAAD,CAAR;AACD,GAJD;;AAMA,QAAMC,eAAe,GAAIT,CAAD,IAAO;AAC7B;AACA,QAAI,CAACH,SAAS,CAACI,OAAf,EAAwB;AACtB;AACD;;AACD,UAAMS,KAAK,GAAGV,CAAC,CAACG,MAAF,CAASC,QAAT,EAAd;AACA,UAAMO,KAAK,GAAGD,KAAK,CAACL,kBAAN,EAAd;AACA,QAAIO,QAAQ,GAAGjB,KAAK,CAACA,KAAK,CAACkB,MAAN,GAAe,CAAhB,CAApB,CAP6B,CAQ7B;;AACAD,IAAAA,QAAQ,CAACN,MAAT,GAAkBM,QAAQ,CAACN,MAAT,CAAgBQ,MAAhB,CAAuB,CAACH,KAAK,CAACJ,CAAP,EAAUI,KAAK,CAACH,CAAhB,CAAvB,CAAlB,CAT6B,CAW7B;;AACAb,IAAAA,KAAK,CAACoB,MAAN,CAAapB,KAAK,CAACkB,MAAN,GAAe,CAA5B,EAA+B,CAA/B,EAAkCD,QAAlC;AACAhB,IAAAA,QAAQ,CAACD,KAAK,CAACmB,MAAN,EAAD,CAAR;AACD,GAdD;;AAgBA,QAAME,aAAa,GAAG,MAAM;AAC1BnB,IAAAA,SAAS,CAACI,OAAV,GAAoB,KAApB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEgB,MAAM,CAACC,UADhB;AAEE,MAAA,EAAE,MAFJ;AAGE,MAAA,MAAM,EAAED,MAAM,CAACE,WAHjB;AAIE,MAAA,WAAW,EAAEpB,eAJf;AAKE,MAAA,WAAW,EAAEU,eALf;AAME,MAAA,SAAS,EAAEO,aANb;AAAA,6BAQE,QAAC,KAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,oBAAX;AAAgC,UAAA,CAAC,EAAE,CAAnC;AAAsC,UAAA,CAAC,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGrB,KAAK,CAACyB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT,QAAC,IAAD;AAEE,UAAA,MAAM,EAAED,IAAI,CAACf,MAFf;AAGE,UAAA,MAAM,EAAC,SAHT;AAIE,UAAA,WAAW,EAAE,EAJf;AAKE,UAAA,OAAO,EAAE,GALX;AAME,UAAA,OAAO,EAAC,OANV;AAOE,UAAA,wBAAwB,EACtBe,IAAI,CAAC7B,IAAL,KAAc,QAAd,GAAyB,iBAAzB,GAA6C;AARjD,WACO8B,CADP;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AACE,MAAA,KAAK,EAAE9B,IADT;AAEE,MAAA,QAAQ,EAAGQ,CAAD,IAAO;AACfP,QAAAA,OAAO,CAACO,CAAC,CAACG,MAAF,CAASoB,KAAV,CAAP;AACD,OAJH;AAAA,8BAME;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CArED;;GAAMhC,I;;KAAAA,I;AAuEN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Line, Text } from 'react-konva';\n\nconst Draw = () => {\n  const [tool, setTool] = React.useState('pen');\n  const [lines, setLines] = React.useState([]);\n  const isDrawing = React.useRef(false);\n\n  const handleMouseDown = (e) => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, { tool, points: [pos.x, pos.y] }]);\n  };\n\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return (\n    <div>\n      <Stage\n        width={window.innerWidth}\n        la\n        height={window.innerHeight}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n      >\n        <Layer>\n          <Text text=\"Just start drawing\" x={5} y={30} />\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line.points}\n              stroke=\"#df4b26\"\n              strokeWidth={10}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation={\n                line.tool === 'eraser' ? 'destination-out' : 'source-over'\n              }\n            />\n          ))}\n        </Layer>\n      </Stage>\n      <select\n        value={tool}\n        onChange={(e) => {\n          setTool(e.target.value);\n        }}\n      >\n        <option value=\"pen\">Pen</option>\n        <option value=\"eraser\">Eraser</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Draw;\n"]},"metadata":{},"sourceType":"module"}
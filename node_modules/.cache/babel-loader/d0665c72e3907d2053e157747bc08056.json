{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/4Location/4Location.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Location(props) {\n  _s();\n\n  let dispatch = useDispatch();\n\n  const sendInfo = values => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n\n    if (props.store.customerInfo.service === 'Excavating') {\n      dispatch({\n        type: 'QUOTE_PROGRESS',\n        payload: {\n          divisor: 9,\n          step_number: 8\n        }\n      });\n      props.history.push('./confirm');\n    } // If commercial is selected skip past the driveway and sidewalk steps\n    else if (props.store.customerInfo.subServices === 'Commercial') {\n      console.log('we got commercial!!!');\n      dispatch({\n        type: 'QUOTE_PROGRESS',\n        payload: {\n          divisor: 9,\n          step_number: step_number + 3\n        }\n      });\n      props.history.push('./email');\n    } else {}\n\n    ;\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 9,\n        step_number: step_number + 1\n      }\n    });\n    props.history.push('./driveway');\n  };\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.street) {\n      errors.street = 'Required';\n    }\n\n    if (!values.city) {\n      errors.city = 'Required';\n    }\n\n    if (!values.state) {\n      errors.state = 'Required';\n    }\n\n    if (!values.zipcode) {\n      errors.zipcode = 'Required';\n    }\n\n    return errors;\n  };\n\n  let data = props.store.customerInfo;\n  const formik = useFormik({\n    initialValues: {\n      street: data.street === '' ? '' : data.street,\n      apartment: data.apartment === '' ? '' : data.apartment,\n      city: data.city === '' ? '' : data.city,\n      state: data.state === '' ? '' : data.state,\n      zipcode: data.zipcode === '' ? '' : data.zipcode\n    },\n    validate,\n    onSubmit: values => {\n      sendInfo(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quoteStep_container_title\",\n      children: \"What's your address?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quoteStep_container_title\",\n      children: \"This info helps us verify the address is in our servicable area.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteStep_formContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_textFormContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"quoteStep_label\",\n              htmlFor: \"street\",\n              children: \"Street\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quoteStep_text quoteStep_street\",\n              id: \"street\",\n              name: \"street\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              value: formik.values.street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), formik.errors.street ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 39\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"quoteStep_label\",\n              htmlFor: \"apartment\",\n              children: \"Apartment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quoteStep_text quoteStep_apt\",\n              id: \"apartment\",\n              name: \"apartment\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              value: formik.values.apartment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), formik.errors.apartment ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.apartment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 42\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"quoteStep_label\",\n              htmlFor: \"city\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quoteStep_text quoteStep_city\",\n              id: \"city\",\n              name: \"city\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              value: formik.values.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), formik.errors.city ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"quoteStep_label\",\n              htmlFor: \"state\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quoteStep_text quoteStep_state\",\n              id: \"state\",\n              name: \"state\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              value: formik.values.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), formik.errors.state ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 38\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"quoteStep_label\",\n              htmlFor: \"zipcode\",\n              children: \"Zipcode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quoteStep_text quoteStep_zipcode\",\n              id: \"zipcode\",\n              name: \"zipcode\",\n              type: \"number\",\n              onChange: formik.handleChange,\n              value: formik.values.zipcode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), formik.errors.zipcode ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.zipcode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 40\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_nextBtn_container\",\n          children: /*#__PURE__*/_jsxDEV(NextButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Location, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = Location;\nexport default connect(mapStoreToProps)(withRouter(Location));\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/4Location/4Location.js"],"names":["connect","useDispatch","withRouter","useFormik","mapStoreToProps","NextButton","Location","props","dispatch","sendInfo","values","step_number","store","quoteProgress","type","payload","customerInfo","service","divisor","history","push","subServices","console","log","validate","errors","street","city","state","zipcode","data","formik","initialValues","apartment","onSubmit","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\n\nfunction Location(props) {\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (values) => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    if (props.store.customerInfo.service === 'Excavating') {\n      dispatch({\n        type: 'QUOTE_PROGRESS',\n        payload: { divisor: 9, step_number: 8 }\n      });\n      props.history.push('./confirm');\n    }\n    // If commercial is selected skip past the driveway and sidewalk steps\n    else if (props.store.customerInfo.subServices === 'Commercial') {\n      console.log('we got commercial!!!');\n\n      dispatch({\n        type: 'QUOTE_PROGRESS',\n        payload: { divisor: 9, step_number: step_number + 3 }\n      });\n      props.history.push('./email');\n    } else {\n    }; dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 9, step_number: step_number + 1 }\n    });\n    props.history.push('./driveway');\n  }\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.street) {\n      errors.street = 'Required';\n    }\n\n    if (!values.city) {\n      errors.city = 'Required';\n    }\n\n    if (!values.state) {\n      errors.state = 'Required';\n    }\n\n    if (!values.zipcode) {\n      errors.zipcode = 'Required';\n    }\n    return errors;\n  };\n\n  let data = props.store.customerInfo;\n\n  const formik = useFormik({\n    initialValues: {\n      street: data.street === '' ? '' : data.street,\n      apartment: data.apartment === '' ? '' : data.apartment,\n      city: data.city === '' ? '' : data.city,\n      state: data.state === '' ? '' : data.state,\n      zipcode: data.zipcode === '' ? '' : data.zipcode,\n    },\n    validate,\n    onSubmit: (values) => {\n      sendInfo(values);\n    },\n  });\n\n  return (\n    <div className=\"quoteStep_container\">\n\n      <h2 className='quoteStep_container_title'>What's your address?</h2>\n      <p className='quoteStep_container_title'>This info helps us verify the address is in our servicable area.</p>\n\n      <div className='quoteStep_formContainer'>\n        <form onSubmit={formik.handleSubmit}>\n          <div className='quoteStep_textFormContainer'>\n            {/* Street */}\n            <div className='quoteStep_textContainer'>\n              <label className='quoteStep_label' htmlFor=\"street\">Street</label>\n              <input\n                className='quoteStep_text quoteStep_street'\n                id=\"street\"\n                name=\"street\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.street}\n              />\n              {formik.errors.street ? <div>{formik.errors.street}</div> : null}\n            </div>\n            {/* Apartment */}\n            <div className='quoteStep_textContainer'>\n              <label className='quoteStep_label' htmlFor=\"apartment\">Apartment</label>\n              <input\n                className='quoteStep_text quoteStep_apt'\n                id=\"apartment\"\n                name=\"apartment\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.apartment}\n              />\n              {formik.errors.apartment ? <div>{formik.errors.apartment}</div> : null}\n            </div>\n            {/* City */}\n            <div className='quoteStep_textContainer'>\n              <label className='quoteStep_label' htmlFor=\"city\">City</label>\n              <input\n                className='quoteStep_text quoteStep_city'\n                id=\"city\"\n                name=\"city\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.city}\n              />\n              {formik.errors.city ? <div>{formik.errors.city}</div> : null}\n            </div>\n            {/* State */}\n            <div className='quoteStep_textContainer'>\n              <label className='quoteStep_label' htmlFor=\"state\">State</label>\n              <input\n                className='quoteStep_text quoteStep_state'\n                id=\"state\"\n                name=\"state\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.state}\n              />\n              {formik.errors.state ? <div>{formik.errors.state}</div> : null}\n            </div>\n            {/* Zipcode */}\n            <div className='quoteStep_textContainer'>\n              <label className='quoteStep_label' htmlFor=\"zipcode\">Zipcode</label>\n              <input\n                className='quoteStep_text quoteStep_zipcode'\n                id=\"zipcode\"\n                name=\"zipcode\"\n                type=\"number\"\n                onChange={formik.handleChange}\n                value={formik.values.zipcode}\n              />\n              {formik.errors.zipcode ? <div>{formik.errors.zipcode}</div> : null}\n            </div>\n          </div>\n          <div className='quoteStep_nextBtn_container'>\n            <NextButton />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Location));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/3Name/3Name.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Name(props) {\n  _s();\n\n  let dispatch = useDispatch();\n\n  const sendInfo = values => {\n    console.log('here are my values');\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 8,\n        step_number: step_number + 1\n      }\n    });\n    props.history.push('./location');\n  };\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.firstName) {\n      errors.firstName = 'Required';\n    } else if (values.firstName.length > 15) {\n      errors.firstName = 'Must be 15 characters or less';\n    }\n\n    if (!values.lastName) {\n      errors.lastName = 'Required';\n    } else if (values.lastName.length > 20) {\n      errors.lastName = 'Must be 20 characters or less';\n    }\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: props.store.customerInfo.name === '' ? '' : props.store.customerInfo.name\n    },\n    validate,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      alert(JSON.stringify(values, null, 2));\n      sendInfo(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quoteStep_container_title\",\n      children: \"What is your first name?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quoteStep_container_title\",\n      children: \"We will use this for a more personalized experience throughout this quote.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        name: \"name\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quoteStep_nextBtn_container\",\n        children: /*#__PURE__*/_jsxDEV(NextButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Name, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = Name;\nexport default connect(mapStoreToProps)(withRouter(Name));\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/3Name/3Name.js"],"names":["connect","useDispatch","withRouter","useFormik","mapStoreToProps","NextButton","Name","props","dispatch","sendInfo","values","console","log","step_number","store","quoteProgress","type","payload","divisor","history","push","validate","errors","firstName","length","lastName","email","test","formik","initialValues","name","customerInfo","onSubmit","setSubmitting","alert","JSON","stringify","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\n\n\nfunction Name(props) {\n\n  let dispatch = useDispatch();\n\n\n  const sendInfo = (values) => {\n    console.log('here are my values');\n\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 8, step_number: step_number + 1 }\n    });\n    props.history.push('./location');\n  };\n  const validate = values => {\n    const errors = {};\n    if (!values.firstName) {\n      errors.firstName = 'Required';\n    } else if (values.firstName.length > 15) {\n      errors.firstName = 'Must be 15 characters or less';\n    }\n\n    if (!values.lastName) {\n      errors.lastName = 'Required';\n    } else if (values.lastName.length > 20) {\n      errors.lastName = 'Must be 20 characters or less';\n    }\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: props.store.customerInfo.name === '' ? '' : props.store.customerInfo.name,\n    },\n    validate,\n    onSubmit: (values, { setSubmitting }) => {\n      alert(JSON.stringify(values, null, 2));\n      sendInfo(values);\n    },\n  });\n\n  return (\n    <div className='quoteStep_container'>\n\n      <h2 className='quoteStep_container_title'>What is your first name?</h2>\n      <p className='quoteStep_container_title'>We will use this for a more personalized experience throughout this quote.</p>\n\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"name\">First Name</label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n        />\n        {formik.errors.name ? <div>{formik.errors.name}</div> : null}\n\n        <div className='quoteStep_nextBtn_container'>\n          <NextButton />\n        </div>\n      </form>\n    </div >\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Name));"]},"metadata":{},"sourceType":"module"}
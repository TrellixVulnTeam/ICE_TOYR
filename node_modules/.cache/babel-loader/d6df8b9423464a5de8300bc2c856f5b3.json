{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/9Confirm/9Confirm.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Confirm(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = props.store.customerInfo;\n\n  const sendInfo = () => {\n    let step_number = props.store.quoteProgress.step_number;\n    let customer = {\n      customer: {\n        customer_first_name: data.name,\n        customer_last_name: \"\",\n        customer_email: data.emaiil,\n        customer_category: \"5f1a48d11289d5e82e798167\",\n        customer_address: {\n          street: data.street\n        }\n      }\n    };\n    dispatch({\n      type: 'ADD_CUSTOMER',\n      payload: props.store.customerInfo\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 9,\n        step_number: step_number + 1\n      }\n    });\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: {\n        apartment: \"\",\n        back_to_black: \"\",\n        city: \"\",\n        driveway: \"\",\n        email: \"\",\n        name: \"\",\n        service: \"\",\n        sidewalk: \"\",\n        state: \"\",\n        street: \"\",\n        subServices: \"\",\n        zipcode: \"\"\n      }\n    });\n    props.history.push('./thank-you');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quoteStep_container_title\",\n      children: \"Does this look right to you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote_confirm_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Name and Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote_confirm_item_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Street: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Apartment: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.apartment === undefined ? 'Not applicable' : data.apartment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"City: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"State: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Zipcode: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.zipcode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Services you requested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote_confirm_item_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type service: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.subServices\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type of driveway: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.driveway\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of locations to shovel to: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.sidewalk\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Back to Black service: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.back_to_black\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteStep_nextBtn_container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn primary_btn\",\n        onClick: sendInfo,\n        children: \"This looks correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Confirm, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Confirm;\nexport default connect(mapStoreToProps)(withRouter(Confirm));\n\nvar _c;\n\n$RefreshReg$(_c, \"Confirm\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/9Confirm/9Confirm.js"],"names":["connect","useDispatch","withRouter","mapStoreToProps","Confirm","props","dispatch","data","store","customerInfo","sendInfo","step_number","quoteProgress","customer","customer_first_name","name","customer_last_name","customer_email","emaiil","customer_category","customer_address","street","type","payload","divisor","apartment","back_to_black","city","driveway","email","service","sidewalk","state","subServices","zipcode","history","push","undefined"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\n\nfunction Confirm(props) {\n\n  const dispatch = useDispatch();\n  const data = props.store.customerInfo;\n\n  const sendInfo = () => {\n\n    let step_number = props.store.quoteProgress.step_number;\n\n    let customer = {\n      customer: {\n        customer_first_name: data.name,\n        customer_last_name: \"\",\n        customer_email: data.emaiil,\n        customer_category: \"5f1a48d11289d5e82e798167\",\n        customer_address: {\n          street: data.street,\n\n        }\n      },\n    };\n\n    dispatch({\n      type: 'ADD_CUSTOMER',\n      payload: props.store.customerInfo\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 9, step_number: step_number + 1 }\n    });\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: {\n        apartment: \"\",\n        back_to_black: \"\",\n        city: \"\",\n        driveway: \"\",\n        email: \"\",\n        name: \"\",\n        service: \"\",\n        sidewalk: \"\",\n        state: \"\",\n        street: \"\",\n        subServices: \"\",\n        zipcode: \"\",\n      }\n    });\n    props.history.push('./thank-you');\n  };\n\n  return (\n    <div className='quoteStep_container'>\n\n      <h2 className='quoteStep_container_title'>Does this look right to you?</h2>\n      <div className='quote_confirm_container'>\n        <h3>Name and Address</h3>\n        <div className='quote_confirm_item_container'>\n          <p>Name: <span>{data.name}</span></p>\n          <p>Street: <span>{data.street}</span></p>\n          <p>Apartment: <span>{data.apartment === undefined ? 'Not applicable' : data.apartment}</span></p>\n          <p>City: <span>{data.city}</span></p>\n          <p>State: <span>{data.state}</span></p>\n          <p>Zipcode: <span>{data.zipcode}</span></p>\n        </div>\n        <h3>Services you requested</h3>\n        <div className='quote_confirm_item_container'>\n          <p>Type service: <span>{data.subServices}</span></p>\n          <p>Type of driveway: <span>{data.driveway}</span></p>\n          <p>Number of locations to shovel to: <span>{data.sidewalk}</span></p>\n          <p>Back to Black service: <span>{data.back_to_black}</span></p>\n        </div>\n      </div>\n      <div className='quoteStep_nextBtn_container'>\n        <button className='btn primary_btn' onClick={sendInfo}>This looks correct!</button>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Confirm));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/3Location/3Location.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Location(props) {\n  _s();\n\n  let dispatch = useDispatch(); // const fullAddress = ['street', 'apartment', 'city', 'state', 'zipcode'];\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 4\n          }\n        });\n        props.history.push('./driveway');\n        break;\n\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 2\n          }\n        });\n        props.history.push('./sub-service');\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What's your address?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This info helps us verify the address is in our servicable area.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        street: '',\n        apartment: '',\n        city: '',\n        state: '',\n        zipcode: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.street) {\n          console.log('got an error street');\n          errors.street = 'Required';\n        } else if (!values.apartment) {\n          console.log('got an error apartment');\n          errors.apartment = 'Required';\n        } else if (!values.city) {\n          console.log('got an error city');\n          errors.city = 'Required';\n        } else if (!values.state) {\n          console.log('got an error state');\n          errors.state = 'Required';\n        } else if (!values.zipcode) {\n          console.log('got an error zipcode');\n          errors.zipcode = 'Required';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        console.log('hit onsubmit');\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          sendInfo(values, 'forward');\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"street\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"apartment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"apartment\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"city\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"state\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"zipcode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"zipcode\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendInfo('', 'back'),\n          children: \"Go sub service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary_btn\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Go to driveway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Location, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Location;\nexport default connect()(withRouter(Location));\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/3Location/3Location.js"],"names":["connect","useDispatch","withRouter","Formik","Form","Field","ErrorMessage","Location","props","dispatch","sendInfo","values","path","type","payload","divisor","step_number","history","push","street","apartment","city","state","zipcode","errors","console","log","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nfunction Location(props) {\n\n  let dispatch = useDispatch();\n\n  // const fullAddress = ['street', 'apartment', 'city', 'state', 'zipcode'];\n\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 4 }\n        });\n        props.history.push('./driveway');\n        break;\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 2 }\n        });\n        props.history.push('./sub-service');\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div>\n\n      <h2>What's your address?</h2>\n      <p>This info helps us verify the address is in our servicable area.</p>\n\n      <Formik\n        initialValues={{ street: '', apartment: '', city: '', state: '', zipcode: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.street) {\n            console.log('got an error street');\n            errors.street = 'Required';\n          } else if (!values.apartment) {\n            console.log('got an error apartment');\n            errors.apartment = 'Required';\n          } else if (!values.city) {\n            console.log('got an error city');\n            errors.city = 'Required';\n          } else if (!values.state) {\n            console.log('got an error state');\n            errors.state = 'Required';\n          } else if (!values.zipcode) {\n            console.log('got an error zipcode');\n            errors.zipcode = 'Required';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log('hit onsubmit');\n\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            sendInfo(values, 'forward');\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"street\" />\n            <ErrorMessage name=\"street\" component=\"div\" />\n            <Field type=\"text\" name=\"apartment\" />\n            <ErrorMessage name=\"apartment\" component=\"div\" />\n            <Field type=\"text\" name=\"city\" />\n            <ErrorMessage name=\"city\" component=\"div\" />\n            <Field type=\"text\" name=\"state\" />\n            <ErrorMessage name=\"state\" component=\"div\" />\n            <Field type=\"text\" name=\"zipcode\" />\n            <ErrorMessage name=\"zipcode\" component=\"div\" />\n\n            <button onClick={() => sendInfo('', 'back')}>Go sub service</button>\n            <button className='btn primary_btn' type=\"submit\" disabled={isSubmitting}>\n              Go to driveway\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect()(withRouter(Location));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/ProgressBar/ProgressBar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressBar() {\n  _s();\n\n  let width_percent = 0; // Max number to divide by\n  // The dividend\n\n  let dividend = 100;\n  let divisor = 6; // which step is currently loaded\n\n  let step_number = 4;\n  width_percent = 16.667;\n\n  const calculatePercent = () => {};\n\n  useEffect(() => {\n    calculatePercent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progressBar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressBar_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressBar_display\",\n        style: {\n          width: `${width_percent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressBar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProgressBar;\nexport default connect(mapStoreToProps)(withRouter(ProgressBar));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/ProgressBar/ProgressBar.js"],"names":["useEffect","connect","withRouter","mapStoreToProps","ProgressBar","width_percent","dividend","divisor","step_number","calculatePercent","width"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,MAAIC,aAAa,GAAG,CAApB,CADqB,CAGrB;AACA;;AACA,MAAIC,QAAQ,GAAG,GAAf;AAEA,MAAIC,OAAO,GAAG,CAAd,CAPqB,CASrB;;AACA,MAAIC,WAAW,GAAG,CAAlB;AAGAH,EAAAA,aAAa,GAAG,MAAhB;;AAGA,QAAMI,gBAAgB,GAAG,MAAM,CAC9B,CADD;;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,GAAEL,aAAc;AAA1B;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCQD,W;;KAAAA,W;AAiCT,eAAeH,OAAO,CAACE,eAAD,CAAP,CAAyBD,UAAU,CAACE,WAAD,CAAnC,CAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nfunction ProgressBar() {\n  let width_percent = 0;\n\n  // Max number to divide by\n  // The dividend\n  let dividend = 100;\n\n  let divisor = 6;\n\n  // which step is currently loaded\n  let step_number = 4;\n\n\n  width_percent = 16.667;\n\n\n  const calculatePercent = () => {\n  };\n\n  useEffect(() => {\n    calculatePercent();\n  }, []);\n\n\n\n  return (\n    <div className='progressBar'>\n      <div className='progressBar_container'>\n        <div className='progressBar_display' style={{ width: `${width_percent}%` }}></div>\n      </div>\n    </div>\n  );\n}\nexport default connect(mapStoreToProps)(withRouter(ProgressBar));"]},"metadata":{},"sourceType":"module"}
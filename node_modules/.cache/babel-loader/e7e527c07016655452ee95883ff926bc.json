{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/3Name/3Name.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Name(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const [fields, setFields] = useState('');\n\n  const sendInfo = values => {\n    console.log('here are my values', fields);\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 8,\n        step_number: step_number + 1\n      }\n    });\n    props.history.push('./location');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quoteStep_container_title\",\n      children: \"What is your first name?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quoteStep_container_title\",\n      children: \"We will use this for a more personalized experience throughout this quote.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          sendInfo(values);\n          setSubmitting(false);\n        }, 400);\n      },\n      onChange: e => setFields({\n        name: e.target.value\n      }),\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_textFormContainer\",\n          \"aria-labelledby\": \"name\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              value: fields.name === '' ? props.store.customerInfo.name : fields.name,\n              className: \"quoteStep_text\",\n              type: \"text\",\n              name: \"name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_nextBtn_container\",\n            children: /*#__PURE__*/_jsxDEV(NextButton, {\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Name, \"7Oa4A012wMuO0x6BluSWrZSR6RY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Name;\nexport default connect(mapStoreToProps)(withRouter(Name));\n\nvar _c;\n\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/3Name/3Name.js"],"names":["connect","useDispatch","withRouter","Formik","Form","Field","ErrorMessage","mapStoreToProps","NextButton","useState","Name","props","dispatch","fields","setFields","sendInfo","values","console","log","step_number","store","quoteProgress","type","payload","divisor","history","push","name","setSubmitting","setTimeout","e","target","value","isSubmitting","customerInfo"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\nimport { useState } from 'react';\n\n\nfunction Name(props) {\n\n  let dispatch = useDispatch();\n  const [fields, setFields] = useState('');\n\n  const sendInfo = (values) => {\n    console.log('here are my values', fields);\n\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 8, step_number: step_number + 1 }\n    });\n    props.history.push('./location');\n  };\n\n  return (\n    <div className='quoteStep_container'>\n\n      <h2 className='quoteStep_container_title'>What is your first name?</h2>\n      <p className='quoteStep_container_title'>We will use this for a more personalized experience throughout this quote.</p>\n\n      <Formik\n        initialValues={{ name: '' }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n\n            sendInfo(values);\n            setSubmitting(false);\n          }, 400);\n        }}\n        onChange={(e) => setFields({ name: e.target.value })}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div className='quoteStep_textFormContainer' aria-labelledby=\"name\">\n              <div className='quoteStep_textContainer'>\n\n                <Field\n                  value={fields.name === '' ? props.store.customerInfo.name : fields.name}\n                  className='quoteStep_text'\n                  type=\"text\"\n                  name=\"name\"\n                  required />\n                <ErrorMessage name=\"name\" component=\"div\" />\n              </div>\n              <div className='quoteStep_nextBtn_container'>\n                <NextButton disabled={isSubmitting} />\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Name));"]},"metadata":{},"sourceType":"module"}
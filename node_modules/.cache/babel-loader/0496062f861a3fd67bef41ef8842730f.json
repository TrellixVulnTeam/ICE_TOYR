{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/4Driveway/4Driveway.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Driveway(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const subServices = ['Residential', 'Commercial'];\n  const [isChecked, setIsChecked] = useState('');\n  useEffect(() => {\n    setIsChecked(props.store.customerInfo.subServices);\n  }, [props.store.customerInfo.subServices]);\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 3\n          }\n        });\n        props.history.push('./location');\n        break;\n\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 1\n          }\n        });\n        props.history.push('./type-of-service');\n        break;\n\n      default:\n    }\n  };\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 7,\n        step_number: 5\n      }\n    });\n    props.history.push('./sidewalk');\n  };\n\n  const goBack = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 7,\n        step_number: 3\n      }\n    });\n    props.history.push('./location');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What type of driveway do you have?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"single_car\",\n      name: \"driveway\",\n      value: \"Single Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"single_car\",\n      children: \"Single Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"double_car\",\n      name: \"driveway\",\n      value: \"Double Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"double_car\",\n      children: \"Double Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"triple_car\",\n      name: \"driveway\",\n      value: \"Triple Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"triple_car\",\n      children: \"Triple Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      id: \"different_driveway\",\n      name: \"driveway\",\n      value: \"My driveway is different\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"different_driveway\",\n      children: \"My driveway is different\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goBack,\n      children: \"Go to location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goForward,\n      children: \"Go to sidewalk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Driveway, \"TQ5P6AuUVH1AmkyiQcV0i1q3tZA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Driveway;\nexport default connect()(withRouter(Driveway));\n\nvar _c;\n\n$RefreshReg$(_c, \"Driveway\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/4Driveway/4Driveway.js"],"names":["connect","useDispatch","withRouter","Driveway","props","dispatch","subServices","isChecked","setIsChecked","useState","useEffect","store","customerInfo","sendInfo","values","path","type","payload","divisor","step_number","history","push","goForward","goBack"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nfunction Driveway(props) {\n\n  let dispatch = useDispatch();\n\n  const subServices = ['Residential', 'Commercial'];\n  const [isChecked, setIsChecked] = useState('');\n\n  useEffect(() => {\n    setIsChecked(props.store.customerInfo.subServices);\n  }, [props.store.customerInfo.subServices]);\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 3 }\n        });\n        props.history.push('./location');\n        break;\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 1 }\n        });\n        props.history.push('./type-of-service');\n        break;\n      default:\n    }\n  };\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 7, step_number: 5 }\n    });\n    props.history.push('./sidewalk');\n  }\n\n  const goBack = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 7, step_number: 3 }\n    });\n    props.history.push('./location');\n  }\n\n  return (\n    <div className='quote'>\n\n      <h2>What type of driveway do you have?</h2>\n\n      <input type=\"radio\" id=\"single_car\" name=\"driveway\" value=\"Single Car\" />\n      <label htmlFor=\"single_car\">Single Car</label>\n      <input type=\"radio\" id=\"double_car\" name=\"driveway\" value=\"Double Car\" />\n      <label htmlFor=\"double_car\">Double Car</label>\n      <input type=\"radio\" id=\"triple_car\" name=\"driveway\" value=\"Triple Car\" />\n      <label htmlFor=\"triple_car\">Triple Car</label>\n      <input type=\"radio\" id=\"different_driveway\" name=\"driveway\" value=\"My driveway is different\" />\n      <label htmlFor=\"different_driveway\">My driveway is different</label>\n\n      <br></br>\n      <button onClick={goBack}>Go to location</button>\n      <button onClick={goForward}>Go to sidewalk</button>\n\n    </div>\n  );\n}\n\nexport default connect()(withRouter(Driveway));"]},"metadata":{},"sourceType":"module"}
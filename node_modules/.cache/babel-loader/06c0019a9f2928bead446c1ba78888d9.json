{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/0NameEmail/0NameEmail.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NameEmail(props) {\n  _s();\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (property, e) => {\n    console.log('checking value of e: ', e.target.value);\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: {\n        [property]: e.target.value\n      }\n    });\n  };\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 7,\n        step_number: 1\n      }\n    });\n    props.history.push('./type-of-service');\n  };\n\n  const goBack = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 7,\n        step_number: 0\n      }\n    });\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What is your name and email?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We are happy you are interested in a getting a quote!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"So that we know who to call you and so that we can send you the details of your quote what is your email address?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goBack,\n      children: \"Go home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goForward,\n      children: \"Go to type of service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NameEmail, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NameEmail;\nexport default connect()(withRouter(NameEmail));\n\nvar _c;\n\n$RefreshReg$(_c, \"NameEmail\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/0NameEmail/0NameEmail.js"],"names":["useEffect","connect","useDispatch","withRouter","Formik","NameEmail","props","dispatch","sendInfo","property","e","console","log","target","value","type","payload","goForward","divisor","step_number","history","push","goBack","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik } from 'formik';\n\nfunction NameEmail(props) {\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (property, e) => {\n    console.log('checking value of e: ', e.target.value);\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload:\n        { [property]: e.target.value }\n    });\n  }\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 7, step_number: 1 }\n    });\n    props.history.push('./type-of-service');\n  }\n\n  const goBack = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 7, step_number: 0 }\n    });\n    props.history.push('/')\n  }\n\n  return (\n    <div>\n\n      <h2>What is your name and email?</h2>\n      <p>We are happy you are interested in a getting a quote!</p>\n      <p>So that we know who to call you and so that we can send you the details of your quote what is your email address?</p>\n\n\n      <br></br>\n\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n            <Field type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n\n\n\n      <button onClick={goBack}>Go home</button>\n      <button onClick={goForward}>Go to type of service</button>\n    </div>\n  );\n}\n\nexport default connect()(withRouter(NameEmail));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/3Location/3Location.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Location(props) {\n  _s();\n\n  let dispatch = useDispatch();\n  const fullAddress = ['Street', 'Apartment', 'City', 'State', 'Zipcode'];\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 4\n          }\n        });\n        props.history.push('./driveway');\n        break;\n\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: {\n            divisor: 7,\n            step_number: 2\n          }\n        });\n        props.history.push('./sub-service');\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What's your address?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This info helps us verify the address is in our servisable area.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        street: '',\n        apartment: '',\n        city: '',\n        state: '',\n        zipcode: ''\n      },\n      validate: values => {\n        let errors = {};\n\n        if (!values.street) {\n          errors.street = 'Required';\n        } else if (!values.apartment) {\n          errors.apartment = 'Required';\n        } else if (!values.city) {\n          errors.city = 'Required';\n        } else if (!values.state) {\n          errors.state = 'Required';\n        } else if (!values.zipcode) {\n          errors.zipcode = 'Required';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          sendInfo(values, 'forward');\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: a,\n          name: a,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: a,\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendInfo('', 'back'),\n          children: \"Go sub service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Go to driveway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Location, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Location;\nexport default connect()(withRouter(Location));\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/3Location/3Location.js"],"names":["connect","useDispatch","withRouter","Formik","Form","Field","ErrorMessage","Location","props","dispatch","fullAddress","sendInfo","values","path","type","payload","divisor","step_number","history","push","street","apartment","city","state","zipcode","errors","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","a"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nfunction Location(props) {\n\n  let dispatch = useDispatch();\n\n  const fullAddress = ['Street', 'Apartment', 'City', 'State', 'Zipcode'];\n\n\n  const sendInfo = (values, path) => {\n    switch (path) {\n      case 'forward':\n        dispatch({\n          type: 'UPDATE_CUSTOMER',\n          payload: values\n        });\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 4 }\n        });\n        props.history.push('./driveway');\n        break;\n      case 'back':\n        dispatch({\n          type: 'QUOTE_PROGRESS',\n          payload: { divisor: 7, step_number: 2 }\n        });\n        props.history.push('./sub-service');\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div>\n\n      <h2>What's your address?</h2>\n      <p>This info helps us verify the address is in our servisable area.</p>\n\n      <Formik\n        initialValues={{ street: '', apartment: '', city: '', state: '', zipcode: '' }}\n        validate={values => {\n          let errors = {};\n          if (!values.street) {\n            errors.street = 'Required';\n          } else if (!values.apartment) {\n            errors.apartment = 'Required';\n          } else if (!values.city) {\n            errors.city = 'Required';\n          } else if (!values.state) {\n            errors.state = 'Required';\n          } else if (!values.zipcode) {\n            errors.zipcode = 'Required';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            sendInfo(values, 'forward');\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type={a} name={a} required />\n            <ErrorMessage name={a} component=\"div\" />\n\n            <button onClick={() => sendInfo('', 'back')}>Go sub service</button>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Go to driveway\n            </button>\n          </Form>\n        )}\n      </Formik>\n\n    </div>\n  );\n}\n\nexport default connect()(withRouter(Location));"]},"metadata":{},"sourceType":"module"}
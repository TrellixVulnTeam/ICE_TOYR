{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/Quote.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter, Route, useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport TypeService from './1TypeService/1TypeService';\nimport SubType from './2SubType/2SubType';\nimport Location from './4Location/4Location';\nimport Driveway from './5Driveway/5Driveway';\nimport Sidewalk from './6Sidewalk/6Sidewalk';\nimport Email from './7Email/7Email';\nimport BackToBlack from './8BackToBlack/8BackToBlack';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport ThankYou from './9ThankYou/9ThankYou';\nimport Name from './3Name/3Name';\nimport BackButton from '../BackButton/BackButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quote(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n    let pathname = document.URL.search('/quote');\n    console.log(document.URL.includes('type-of-service'));\n    dispatch({\n      type: 'CHECK_FOR_QUOTE',\n      payload: pathname\n    });\n\n    const loadCustomer = () => {\n      dispatch({\n        type: 'UPDATE_CUSTOMER',\n        payload: {\n          name: '',\n          email: '',\n          service: ''\n        }\n      });\n    };\n\n    loadCustomer();\n  }, [dispatch]);\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 8,\n        step_number: 0\n      }\n    });\n    props.history.push('/');\n  };\n\n  const goBack = () => {\n    const step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 8,\n        step_number: step_number - 1\n      }\n    });\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote_backBtnPos\",\n      children: /*#__PURE__*/_jsxDEV(BackButton, {\n        click: goBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quote_closeBtn\",\n      onClick: goForward,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        style: {\n          fontSize: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/name`,\n      component: Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/type-of-service`,\n      component: TypeService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/sub-service`,\n      component: SubType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/location`,\n      component: Location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/driveway`,\n      component: Driveway\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/sidewalk`,\n      component: Sidewalk\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/email`,\n      component: Email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/back-to-black`,\n      component: BackToBlack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/thank-you`,\n      component: ThankYou\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quote, \"ttHHWC+EsJmhGbpqXwDwA2EruUw=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Quote;\nexport default connect()(withRouter(Quote));\n\nvar _c;\n\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/Quote.js"],"names":["connect","useDispatch","withRouter","Route","useHistory","useEffect","TypeService","SubType","Location","Driveway","Sidewalk","Email","BackToBlack","ProgressBar","ThankYou","Name","BackButton","CloseIcon","Quote","props","dispatch","history","document","body","scrollTop","documentElement","pathname","URL","search","console","log","includes","type","payload","loadCustomer","name","email","service","goForward","divisor","step_number","push","goBack","store","quoteProgress","fontSize","match","path"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter, Route, useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nimport TypeService from './1TypeService/1TypeService';\nimport SubType from './2SubType/2SubType';\nimport Location from './4Location/4Location';\nimport Driveway from './5Driveway/5Driveway';\nimport Sidewalk from './6Sidewalk/6Sidewalk';\nimport Email from './7Email/7Email';\nimport BackToBlack from './8BackToBlack/8BackToBlack';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport ThankYou from './9ThankYou/9ThankYou';\nimport Name from './3Name/3Name';\nimport BackButton from '../BackButton/BackButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction Quote(props) {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n\n    let pathname = document.URL.search('/quote');\n    console.log(document.URL.includes('type-of-service'));\n\n    dispatch({\n      type: 'CHECK_FOR_QUOTE',\n      payload: pathname\n    });\n\n    const loadCustomer = () => {\n      dispatch({\n        type: 'UPDATE_CUSTOMER',\n        payload: {\n          name: '',\n          email: '',\n          service: '',\n        },\n      });\n    }\n    loadCustomer();\n  }, [dispatch]);\n\n  const goForward = () => {\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 8, step_number: 0 }\n    });\n    props.history.push('/');\n  }\n\n  const goBack = () => {\n    const step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 8, step_number: step_number - 1 }\n    });\n    history.goBack();\n  }\n\n  return (\n    <div className='quote'>\n      <ProgressBar />\n      <div className='quote_backBtnPos'>\n        <BackButton click={goBack} />\n      </div>\n      <button className='quote_closeBtn' onClick={goForward}><CloseIcon style={{ fontSize: 40 }} /></button>\n\n      <Route exact path={`${props.match.path}/name`} component={Name} />\n      <Route exact path={`${props.match.path}/type-of-service`} component={TypeService} />\n      <Route exact path={`${props.match.path}/sub-service`} component={SubType} />\n      <Route exact path={`${props.match.path}/location`} component={Location} />\n      <Route exact path={`${props.match.path}/driveway`} component={Driveway} />\n      <Route exact path={`${props.match.path}/sidewalk`} component={Sidewalk} />\n      <Route exact path={`${props.match.path}/email`} component={Email} />\n      <Route exact path={`${props.match.path}/back-to-black`} component={BackToBlack} />\n      <Route exact path={`${props.match.path}/thank-you`} component={ThankYou} />\n\n    </div>\n\n  );\n}\n\nexport default connect()(withRouter(Quote));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/9Confirm/9Confirm.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Confirm(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = props.store.customerInfo;\n\n  const sendInfo = () => {\n    let step_number = props.store.quoteProgress.step_number;\n    let street_and_apt = data.street;\n\n    if (data.apartment !== '') {\n      street_and_apt = data.street + ' Apt. ' + data.apartment;\n    }\n\n    let customer = {\n      customer: {\n        customer_first_name: data.name,\n        customer_last_name: \"\",\n        customer_email: data.email,\n        customer_category: \"5f1a48d11289d5e82e798167\",\n        customer_address: {\n          street: street_and_apt,\n          city: data.city,\n          state: data.state,\n          zip_code: data.zipcode\n        },\n        custom_fields: [{\n          label: 'Back to Black',\n          value: data.back_to_black\n        }, {\n          label: 'Driveway',\n          value: data.driveway\n        }, {\n          label: 'Location to Shovel',\n          value: data.sidewalk\n        }, {\n          label: 'Service',\n          value: data.service\n        }, {\n          label: 'Sub Service',\n          value: data.subServices\n        }]\n      }\n    };\n    console.log('checking customer object', customer); // dispatch({\n    //   type: 'ADD_CUSTOMER',\n    //   payload: customer\n    // });\n\n    axios({\n      body: JSON.stringify({\n        \"customer\": {\n          \"customer_first_name\": \"John\",\n          \"customer_last_name\": \"Doe\",\n          \"customer_company_name\": \"Electron Ltd\",\n          \"customer_email\": \"johndoe@zuper.com\",\n          \"customer_category\": \"5f1a48d11289d5e82e798167\"\n        }\n      }),\n      method: 'POST',\n      url: '/.netlify/functions/addCustomer'\n    }).then(response => response.json());\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 9,\n        step_number: step_number + 1\n      }\n    });\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: {\n        apartment: \"\",\n        back_to_black: \"\",\n        city: \"\",\n        driveway: \"\",\n        email: \"\",\n        name: \"\",\n        service: \"\",\n        sidewalk: \"\",\n        state: \"\",\n        street: \"\",\n        subServices: \"\",\n        zipcode: \"\"\n      }\n    });\n    props.history.push('./thank-you');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quoteStep_container_title\",\n      children: \"Does this look right to you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote_confirm_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Name and Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote_confirm_item_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Street: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Apartment: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.apartment === undefined ? 'Not applicable' : data.apartment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"City: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"State: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Zipcode: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.zipcode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Services you requested\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote_confirm_item_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type service: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.service\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), data.service === \"Excavating\" ? '' : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Type of driveway: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.driveway\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Number of locations to shovel to: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.sidewalk\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Back to Black service: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: data.back_to_black\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteStep_nextBtn_container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn primary_btn\",\n        onClick: sendInfo,\n        children: \"This looks correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Confirm, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Confirm;\nexport default connect(mapStoreToProps)(withRouter(Confirm));\n\nvar _c;\n\n$RefreshReg$(_c, \"Confirm\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/9Confirm/9Confirm.js"],"names":["connect","useDispatch","withRouter","mapStoreToProps","axios","Confirm","props","dispatch","data","store","customerInfo","sendInfo","step_number","quoteProgress","street_and_apt","street","apartment","customer","customer_first_name","name","customer_last_name","customer_email","email","customer_category","customer_address","city","state","zip_code","zipcode","custom_fields","label","value","back_to_black","driveway","sidewalk","service","subServices","console","log","body","JSON","stringify","method","url","then","response","json","type","payload","divisor","history","push","undefined"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport axios from 'axios';\n\nfunction Confirm(props) {\n\n  const dispatch = useDispatch();\n  const data = props.store.customerInfo;\n\n  const sendInfo = () => {\n\n    let step_number = props.store.quoteProgress.step_number;\n    let street_and_apt = data.street;\n    if (data.apartment !== '') {\n      street_and_apt = data.street + ' Apt. ' + data.apartment;\n    }\n\n    let customer = {\n      customer: {\n        customer_first_name: data.name,\n        customer_last_name: \"\",\n        customer_email: data.email,\n        customer_category: \"5f1a48d11289d5e82e798167\",\n        customer_address: {\n          street: street_and_apt,\n          city: data.city,\n          state: data.state,\n          zip_code: data.zipcode,\n        },\n        custom_fields: [\n          {\n            label: 'Back to Black',\n            value: data.back_to_black\n          },\n          {\n            label: 'Driveway',\n            value: data.driveway\n          },\n          {\n            label: 'Location to Shovel',\n            value: data.sidewalk\n          },\n          {\n            label: 'Service',\n            value: data.service\n          },\n          {\n            label: 'Sub Service',\n            value: data.subServices\n          },\n        ],\n      },\n    };\n\n    console.log('checking customer object', customer);\n    // dispatch({\n    //   type: 'ADD_CUSTOMER',\n    //   payload: customer\n    // });\n\n\n    axios({\n      body: JSON.stringify({\n        \"customer\": {\n          \"customer_first_name\": \"John\",\n          \"customer_last_name\": \"Doe\",\n          \"customer_company_name\": \"Electron Ltd\",\n          \"customer_email\": \"johndoe@zuper.com\",\n          \"customer_category\": \"5f1a48d11289d5e82e798167\",\n        }\n      }),\n      method: 'POST',\n      url: '/.netlify/functions/addCustomer',\n    }).then(response => response.json());\n\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 9, step_number: step_number + 1 }\n    });\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: {\n        apartment: \"\",\n        back_to_black: \"\",\n        city: \"\",\n        driveway: \"\",\n        email: \"\",\n        name: \"\",\n        service: \"\",\n        sidewalk: \"\",\n        state: \"\",\n        street: \"\",\n        subServices: \"\",\n        zipcode: \"\",\n      }\n    });\n    props.history.push('./thank-you');\n  };\n\n  return (\n    <div className='quoteStep_container'>\n\n      <h2 className='quoteStep_container_title'>Does this look right to you?</h2>\n      <div className='quote_confirm_container'>\n        <h3>Name and Address</h3>\n        <div className='quote_confirm_item_container'>\n          <p>Name: <span>{data.name}</span></p>\n          <p>Street: <span>{data.street}</span></p>\n          <p>Apartment: <span>{data.apartment === undefined ? 'Not applicable' : data.apartment}</span></p>\n          <p>City: <span>{data.city}</span></p>\n          <p>State: <span>{data.state}</span></p>\n          <p>Zipcode: <span>{data.zipcode}</span></p>\n        </div>\n        <h3>Services you requested</h3>\n        <div className='quote_confirm_item_container'>\n          <p>Type service: <span>{data.service}</span></p>\n          {data.service === \"Excavating\" ? '' : <>\n            <p>Type of driveway: <span>{data.driveway}</span></p>\n            <p>Number of locations to shovel to: <span>{data.sidewalk}</span></p>\n            <p>Back to Black service: <span>{data.back_to_black}</span></p>\n          </>}\n        </div>\n      </div>\n      <div className='quoteStep_nextBtn_container'>\n        <button className='btn primary_btn' onClick={sendInfo}>This looks correct!</button>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Confirm));"]},"metadata":{},"sourceType":"module"}
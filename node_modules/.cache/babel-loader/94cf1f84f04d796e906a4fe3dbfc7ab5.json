{"ast":null,"code":"var _jsxFileName = \"/Users/jman/Developer/ice/src/components/Quote/7Email/7Email.js\",\n    _s = $RefreshSig$();\n\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Email(props) {\n  _s();\n\n  let dispatch = useDispatch();\n\n  const sendInfo = values => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: {\n        divisor: 8,\n        step_number: step_number + 1\n      }\n    });\n    props.history.push('./back-to-black');\n  };\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: props.store.customerInfo.name === '' ? '' : props.store.customerInfo.name\n    },\n    validate,\n    onSubmit: values => {\n      sendInfo(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quoteStep_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quoteStep_container_title\",\n      children: \"What is your name and email?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quoteStep_container_descrip\",\n      children: [\"We are happy you are interested in a getting a quote!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 103\n      }, this), \"So that we know who to call you and so that we can send you the details of your quote what is your email address?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteStep_formContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_textFormContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quoteStep_textContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"quoteStep_label\",\n              htmlFor: \"name\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quoteStep_text quoteStep_name\",\n              id: \"name\",\n              name: \"name\",\n              type: \"text\",\n              onChange: formik.handleChange,\n              value: formik.values.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formik.errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteStep_nextBtn_container\",\n          children: /*#__PURE__*/_jsxDEV(NextButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Email, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = Email;\nexport default connect(mapStoreToProps)(withRouter(Email));\n\nvar _c;\n\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"sources":["/Users/jman/Developer/ice/src/components/Quote/7Email/7Email.js"],"names":["connect","useDispatch","withRouter","Formik","Form","Field","ErrorMessage","useFormik","mapStoreToProps","NextButton","Email","props","dispatch","sendInfo","values","step_number","store","quoteProgress","type","payload","divisor","history","push","validate","errors","email","test","formik","initialValues","name","customerInfo","onSubmit","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport mapStoreToProps from '../../../redux/mapStoreToProps';\nimport NextButton from '../../CustomComponents/NextButton';\n\nfunction Email(props) {\n\n  let dispatch = useDispatch();\n\n  const sendInfo = (values) => {\n    let step_number = props.store.quoteProgress.step_number;\n    dispatch({\n      type: 'UPDATE_CUSTOMER',\n      payload: values\n    });\n    dispatch({\n      type: 'QUOTE_PROGRESS',\n      payload: { divisor: 8, step_number: step_number + 1 }\n    });\n    props.history.push('./back-to-black');\n  };\n\n  const validate = values => {\n    const errors = {};\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    ) {\n      errors.email = 'Invalid email address';\n    }\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: props.store.customerInfo.name === '' ? '' : props.store.customerInfo.name,\n    },\n    validate,\n    onSubmit: (values) => {\n      sendInfo(values);\n    },\n  });\n\n  return (\n    <div className='quoteStep_container'>\n\n      <h2 className='quoteStep_container_title' >What is your name and email?</h2>\n      <p className='quoteStep_container_descrip'>We are happy you are interested in a getting a quote!<br></br>So that we know who to call you and so that we can send you the details of your quote what is your email address?</p>\n\n      <div className='quoteStep_formContainer'>\n        <form onSubmit={formik.handleSubmit}>\n          <div className='quoteStep_textFormContainer'>\n            <div className='quoteStep_textContainer'>\n              <label className='quoteStep_label' htmlFor=\"name\">First Name</label>\n              <input\n                className='quoteStep_text quoteStep_name'\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.name}\n              />\n              {formik.errors.name ? <div>{formik.errors.name}</div> : null}\n            </div>\n          </div>\n          <div className='quoteStep_nextBtn_container'>\n            <NextButton />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(withRouter(Email));"]},"metadata":{},"sourceType":"module"}